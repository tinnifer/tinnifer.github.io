{"version":3,"file":"battle-tooltips.js","names":["ModifiableValue","battle","pokemon","serverPokemon","value","maxValue","comment","itemName","abilityName","weatherName","isAccuracy","Dex","items","get","item","name","ability","baseAbility","abilities","weather","moves","exists","_proto","prototype","reset","arguments","length","undefined","tryItem","_this$pokemon","hasPseudoWeather","push","volatiles","ignoreKlutz","tryAbility","includes","_this$pokemon2","_this$pokemon3","effectiveAbility","tryWeather","_i2","_this$battle$sides2","sides","side","_i4","_side$active2","active","itemModify","factor","modify","abilityModify","weatherModify","round","set","reason","setRange","Number","toFixed","toString","valueString","join","BattleTooltips","_this","clickTooltipEvent","e","isLocked","preventDefault","stopImmediatePropagation","holdLockTooltipEvent","hideTooltip","target","currentTarget","showTooltip","type","tagName","longTapTimeout","setTimeout","lockTooltip","LONG_TAP_DELAY","showTooltipEvent","elem","cancelLongTap","parentNode","removeChild","parentElem","$","removeClass","clearTimeout","_proto2","isPressed","addClass","handleTouchEnd","listen","_this2","$elem","on","unshowTooltip","click","args","dataset","tooltip","split","ownHeight","ownheight","buf","move","dex","teamIndex","parseInt","nearSide","pokemonControlled","Math","floor","mySide","n","gmaxMove","myPokemon","showMoveTooltip","sideIndex","species","getBaseSpecies","baseSpecies","index","_i6","_side$pokemon2","otherPokemon","showPokemonTooltip","sidesSwitched","activeIndex","pokemonIndex","ally","myAllyPokemon","showFieldTooltip","Promise","resolve","Error","stack","placeTooltip","innerHTML","hoveredElem","notRelativeToParent","scene","$turn","hoveredX1","offset","left","parent","hoveredY1","top","hoveredY2","outerHeight","x","max","y","$wrapper","document","body","append","selection","window","getSelection","err","css","html","appendTo","find","height","documentElement","clientHeight","width","outerWidth","clientWidth","getStatusZMoveEffect","zMove","effect","zMoveEffects","boostText","boost","boosts","Object","keys","map","stat","BattleTextParser","getMaxMoveFromType","maxMoveTable","isZOrMax","text","zEffect","foeActive","foe","gameType","concat","filter","toID","_this$getMoveType","getMoveType","moveType","category","zMoveFrom","Move","id","assign","moveName","zMoveTable","zMoveType","movePower","basePower","startsWith","maxMove","getTypeIcon","getCategoryIcon","showingMultipleBasePowers","prevBasePower","difference","basePowers","_i8","_foeActive2","getMoveBasePower","activeTarget","accuracy","getMoveAccuracy","calls","gen","calledMove","hardcoreMode","shortDesc","priority","desc","flags","defrost","protect","bypasssub","reflectable","contact","sound","powder","punch","pulse","bite","recoil","hasCrashDamage","bullet","slicing","wind","clientPokemon","isActive","illusionIndex","_this3","genderBuf","gender","fxPrefix","toLowerCase","BattleLog","escapeHTML","speciesForme","levelBuf","level","formechange","transform","types","terastallized","teraType","getPokemonTypes","typechange","typeadd","rules","fainted","hp","maxhp","status","toUpperCase","exacthp","Pokemon","getHPText","min","statusData","toxicTurns","sleepTurns","supportsAbilities","tier","abilityText","getPokemonAbilityText","itemText","itemEffect","prevItem","prevItemEffect","renderStats","battlePokemon","findCorrespondingPokemon","_i10","_serverPokemon$moves2","moveid","moveTrack","_i12","_battlePokemon$moveTr2","row","getPPUseText","_i14","_clientPokemon$moveTr2","_ref","charAt","isZ","isMax","pokemonHasClones","atLeastOne","_i16","_this$battle$sides4","sideConditions","sideConditionsLeft","weatherbuf","weatherLeft","slice","speciesClause","_i18","_side$pokemon4","searchid","calculateModifiedStats","_clientPokemon$effect","_clientPokemon$volati","_this$battle$dex$spec","_this4","stats","isPowerTrick","_i20","_Dex$statNamesExceptH2","statNamesExceptHP","statName","sourceStatName","clientStatName","spc","boostLevel","boostTable","atk","spe","_i22","_Dex$statNamesExceptH4","speedHalvingEVItems","isTransform","speciesName","speedModifiers","spa","def","spd","abilityActive","pokemonHasType","allyActive","_i24","allyAbility","getAllyAbility","getSpecies","_i26","_Dex$statNamesExceptH6","isNFE","evos","some","evo","_this4$battle$dex$spe","evoSpecies","isNonstandard","_i28","chainedSpeedModifier","_i30","modifier","ceil","short","isTransformed","_this$getSpeedRange","getSpeedRange","modifiedStats","hasModifiedStat","_i32","_Dex$statNamesExceptH8","statLabel","BattleText","statShortName","_i34","_Dex$statNamesExceptH10","moveTrackRow","showKnown","ppUsed","maxpp","substr","pp","noPPBoosts","Infinity","_i36","_pokemon$moveTrack2","_ref2","_pokemon$volatiles$tr","tr","trunc","baseSpe","baseStats","bstWithoutHp","bst","scale","isCGT","isRandomBattle","minNature","maxNature","maxIv","maxIvEvOffset","forMaxMove","pokemonTypes","getTypeList","onMemory","onPlate","onDrive","naturalGift","isGrounded","getSpeciesForme","noTypeOverride","allowTypeOverride","_pokemon$getTypes","getTypes","i","isSound","getGen3Category","ohko","accuracyModifiers","_i38","_pokemon$side$active2","chain","_i40","mod","accuracyAfterChain","multiplier","ratios","ratio","faintCounter","boostCount","_i42","_Object$values2","values","_i44","_Object$values4","ppLeft","_this$getSpeedRange2","minSpe","maxSpe","minRatio","maxRatio","_this$getSpeedRange3","fling","isGKLK","targetWeight","getWeightKg","pokemonWeight","timesAttacked","secondaries","auraBoosted","auraBroken","_i46","_pokemon$side$active4","_i48","_pokemon$side$foe$act2","getItemBoost","_value$pokemon$volati","_BattleTooltips$orbUs","_BattleTooltips$orbTy","incenseTypes","itemTypes","orbUsers","orbTypes","noGemMoves","preterastallized","_i50","_types2","curType","slot","getPokemonAbilityData","abilityData","possibilities","hidePossible","baseAbilityName","Poison","Fighting","Dark","Grass","Normal","Rock","Steel","Dragon","Electric","Water","Fire","Ghost","Bug","Psychic","Ice","Flying","Ground","Fairy","BattleStatGuesser","formatid","moveCount","hasMove","ignoreEVLimits","supportsEVs","supportsAVs","endsWith","_proto3","guess","role","guessRole","comboEVs","guessEVs","evs","plusStat","minusStat","itemid","abilityid","megaEvolves","megaStone","needsFourMoves","moveids","len","heal","isFast","physicalBulk","specialBulk","bulk","ultrafast","offenseBias","ensureMinEVs","evTotal","diff","change","evPriority","prioStat","ensureMaxEVs","statChart","primaryStat","getStat","ev","secondaryStat","SRweaknesses","SRresistances","SRweak","indexOf","hpDivisibility","hpShouldBeDivisible","remaining","evOverride","natureOverride","_BattleNatures","_BattleNatures2","baseStat","iv","ivs","val","BattleNatures","nature","plus","minus","friendshipValue","require","global"],"sources":["../src/battle-tooltips.ts"],"sourcesContent":["/**\r\n * Pokemon Showdown Tooltips\r\n *\r\n * A file for generating tooltips for battles. This should be IE7+ and\r\n * use the DOM directly.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nclass ModifiableValue {\r\n\tvalue = 0;\r\n\tmaxValue = 0;\r\n\tcomment: string[];\r\n\tbattle: Battle;\r\n\tpokemon: Pokemon;\r\n\tserverPokemon: ServerPokemon;\r\n\titemName: string;\r\n\tabilityName: string;\r\n\tweatherName: string;\r\n\tisAccuracy = false;\r\n\tconstructor(battle: Battle, pokemon: Pokemon, serverPokemon: ServerPokemon) {\r\n\t\tthis.comment = [];\r\n\t\tthis.battle = battle;\r\n\t\tthis.pokemon = pokemon;\r\n\t\tthis.serverPokemon = serverPokemon;\r\n\r\n\t\tthis.itemName = Dex.items.get(serverPokemon.item).name;\r\n\t\tconst ability = serverPokemon.ability || pokemon?.ability || serverPokemon.baseAbility;\r\n\t\tthis.abilityName = Dex.abilities.get(ability).name;\r\n\t\tthis.weatherName = battle.weather === 'snow' ? 'Snow' : Dex.moves.get(battle.weather).exists ?\r\n\t\t\tDex.moves.get(battle.weather).name : Dex.abilities.get(battle.weather).name;\r\n\t}\r\n\treset(value = 0, isAccuracy?: boolean) {\r\n\t\tthis.value = value;\r\n\t\tthis.maxValue = 0;\r\n\t\tthis.isAccuracy = !!isAccuracy;\r\n\t\tthis.comment = [];\r\n\t}\r\n\ttryItem(itemName: string) {\r\n\t\tif (itemName !== this.itemName) return false;\r\n\t\tif (this.battle.hasPseudoWeather('Magic Room')) {\r\n\t\t\tthis.comment.push(` (${itemName} suppressed by Magic Room)`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.pokemon?.volatiles['embargo']) {\r\n\t\t\tthis.comment.push(` (${itemName} suppressed by Embargo)`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst ignoreKlutz = [\r\n\t\t\t\"Macho Brace\", \"Power Anklet\", \"Power Band\", \"Power Belt\", \"Power Bracer\", \"Power Lens\", \"Power Weight\",\r\n\t\t];\r\n\t\tif (this.tryAbility('Klutz') && !ignoreKlutz.includes(itemName)) {\r\n\t\t\tthis.comment.push(` (${itemName} suppressed by Klutz)`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\ttryAbility(abilityName: string) {\r\n\t\tif (abilityName !== this.abilityName) return false;\r\n\t\tif (this.pokemon?.volatiles['gastroacid']) {\r\n\t\t\tthis.comment.push(` (${abilityName} suppressed by Gastro Acid)`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check for Neutralizing Gas\r\n\t\tif (!this.pokemon?.effectiveAbility(this.serverPokemon)) return false;\r\n\t\treturn true;\r\n\t}\r\n\ttryWeather(weatherName?: string) {\r\n\t\tif (!this.weatherName) return false;\r\n\t\tif (!weatherName) weatherName = this.weatherName;\r\n\t\telse if (weatherName !== this.weatherName) return false;\r\n\t\tfor (const side of this.battle.sides) {\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && ['Air Lock', 'Cloud Nine'].includes(active.ability)) {\r\n\t\t\t\t\tthis.comment.push(` (${weatherName} suppressed by ${active.ability})`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\titemModify(factor: number, itemName?: string) {\r\n\t\tif (!itemName) itemName = this.itemName;\r\n\t\tif (!itemName) return false;\r\n\t\tif (!this.tryItem(itemName)) return false;\r\n\t\treturn this.modify(factor, itemName);\r\n\t}\r\n\tabilityModify(factor: number, abilityName: string) {\r\n\t\tif (!this.tryAbility(abilityName)) return false;\r\n\t\treturn this.modify(factor, abilityName);\r\n\t}\r\n\tweatherModify(factor: number, weatherName?: string, name?: string) {\r\n\t\tif (!weatherName) weatherName = this.weatherName;\r\n\t\tif (!weatherName) return false;\r\n\t\tif (!this.tryWeather(weatherName)) return false;\r\n\t\treturn this.modify(factor, name || weatherName);\r\n\t}\r\n\tmodify(factor: number, name?: string) {\r\n\t\tif (factor === 0) {\r\n\t\t\tif (name) this.comment.push(` (${name})`);\r\n\t\t\tthis.value = 0;\r\n\t\t\tthis.maxValue = 0;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (name) this.comment.push(` (${this.round(factor)}&times; from ${name})`);\r\n\t\tthis.value *= factor;\r\n\t\tif (!(name === 'Technician' && this.maxValue > 60)) this.maxValue *= factor;\r\n\t\treturn true;\r\n\t}\r\n\tset(value: number, reason?: string) {\r\n\t\tif (reason) this.comment.push(` (${reason})`);\r\n\t\tthis.value = value;\r\n\t\tthis.maxValue = 0;\r\n\t\treturn true;\r\n\t}\r\n\tsetRange(value: number, maxValue: number, reason?: string) {\r\n\t\tif (reason) this.comment.push(` (${reason})`);\r\n\t\tthis.value = value;\r\n\t\tthis.maxValue = maxValue;\r\n\t\treturn true;\r\n\t}\r\n\tround(value: number) {\r\n\t\treturn value ? Number(value.toFixed(2)) : 0;\r\n\t}\r\n\ttoString() {\r\n\t\tlet valueString;\r\n\t\tif (this.isAccuracy) {\r\n\t\t\tvalueString = this.value ? `${this.round(this.value)}%` : `can't miss`;\r\n\t\t} else {\r\n\t\t\tvalueString = this.value ? `${this.round(this.value)}` : ``;\r\n\t\t}\r\n\t\tif (this.maxValue) {\r\n\t\t\tvalueString += ` to ${this.round(this.maxValue)}` + (this.isAccuracy ? '%' : '');\r\n\t\t}\r\n\t\treturn valueString + this.comment.join('');\r\n\t}\r\n}\r\n\r\nclass BattleTooltips {\r\n\tbattle: Battle;\r\n\r\n\tconstructor(battle: Battle) {\r\n\t\tthis.battle = battle;\r\n\t}\r\n\r\n\t// tooltips\r\n\t// Touch delay, pressing finger more than that time will cause the tooltip to open.\r\n\t// Shorter time will cause the button to click\r\n\tstatic LONG_TAP_DELAY = 350; // ms\r\n\tstatic longTapTimeout = 0;\r\n\tstatic elem: HTMLDivElement | null = null;\r\n\tstatic parentElem: HTMLElement | null = null;\r\n\tstatic isLocked = false;\r\n\tstatic isPressed = false;\r\n\r\n\tstatic hideTooltip() {\r\n\t\tif (!BattleTooltips.elem) return;\r\n\t\tBattleTooltips.cancelLongTap();\r\n\t\tBattleTooltips.elem.parentNode!.removeChild(BattleTooltips.elem);\r\n\t\tBattleTooltips.elem = null;\r\n\t\tBattleTooltips.parentElem = null;\r\n\t\tBattleTooltips.isLocked = false;\r\n\t\t$('#tooltipwrapper').removeClass('tooltip-locked');\r\n\t}\r\n\r\n\tstatic cancelLongTap() {\r\n\t\tif (BattleTooltips.longTapTimeout) {\r\n\t\t\tclearTimeout(BattleTooltips.longTapTimeout);\r\n\t\t\tBattleTooltips.longTapTimeout = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tlockTooltip() {\r\n\t\tif (BattleTooltips.elem && !BattleTooltips.isLocked) {\r\n\t\t\tBattleTooltips.isLocked = true;\r\n\t\t\tif (BattleTooltips.isPressed) {\r\n\t\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\r\n\t\t\t\tBattleTooltips.isPressed = false;\r\n\t\t\t}\r\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locked');\r\n\t\t}\r\n\t}\r\n\r\n\thandleTouchEnd(e: TouchEvent) {\r\n\t\tBattleTooltips.cancelLongTap();\r\n\r\n\t\tif (!BattleTooltips.isLocked) BattleTooltips.hideTooltip();\r\n\t}\r\n\r\n\tlisten(elem: HTMLElement | JQuery<HTMLElement>) {\r\n\t\tconst $elem = $(elem);\r\n\t\t$elem.on('mouseover', '.has-tooltip', this.showTooltipEvent);\r\n\t\t$elem.on('click', '.has-tooltip', this.clickTooltipEvent);\r\n\t\t$elem.on('focus', '.has-tooltip', this.showTooltipEvent);\r\n\t\t$elem.on('mouseout', '.has-tooltip', BattleTooltips.unshowTooltip);\r\n\t\t$elem.on('mousedown', '.has-tooltip', this.holdLockTooltipEvent);\r\n\t\t$elem.on('blur', '.has-tooltip', BattleTooltips.unshowTooltip);\r\n\t\t$elem.on('mouseup', '.has-tooltip', BattleTooltips.unshowTooltip);\r\n\r\n\t\t$elem.on('touchstart', '.has-tooltip', e => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.holdLockTooltipEvent(e);\r\n\t\t\tif (!BattleTooltips.parentElem) {\r\n\t\t\t\t// should never happen, but in case there's a bug in the tooltip handler\r\n\t\t\t\tBattleTooltips.parentElem = e.currentTarget;\r\n\t\t\t}\r\n\t\t\t$(BattleTooltips.parentElem!).addClass('pressed');\r\n\t\t\tBattleTooltips.isPressed = true;\r\n\t\t});\r\n\t\t$elem.on('touchend', '.has-tooltip', e => {\r\n\t\t\te.preventDefault();\r\n\t\t\tif (e.currentTarget === BattleTooltips.parentElem && BattleTooltips.isPressed) {\r\n\t\t\t\tBattleTooltips.parentElem!.click();\r\n\t\t\t}\r\n\t\t\tBattleTooltips.unshowTooltip();\r\n\t\t});\r\n\t\t$elem.on('touchleave', '.has-tooltip', BattleTooltips.unshowTooltip);\r\n\t\t$elem.on('touchcancel', '.has-tooltip', BattleTooltips.unshowTooltip);\r\n\t}\r\n\r\n\tclickTooltipEvent = (e: Event) => {\r\n\t\tif (BattleTooltips.isLocked) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * An event that will lock a tooltip if held down\r\n\t *\r\n\t * (Namely, a long-tap or long-click)\r\n\t */\r\n\tholdLockTooltipEvent = (e: JQuery.TriggeredEvent) => {\r\n\t\tif (BattleTooltips.isLocked) BattleTooltips.hideTooltip();\r\n\t\tconst target = e.currentTarget as HTMLElement;\r\n\t\tthis.showTooltip(target);\r\n\t\tlet factor = (e.type === 'mousedown' && target.tagName === 'BUTTON' ? 2 : 1);\r\n\r\n\t\tBattleTooltips.longTapTimeout = setTimeout(() => {\r\n\t\t\tBattleTooltips.longTapTimeout = 0;\r\n\t\t\tthis.lockTooltip();\r\n\t\t}, BattleTooltips.LONG_TAP_DELAY * factor);\r\n\t};\r\n\r\n\tshowTooltipEvent = (e: Event) => {\r\n\t\tif (BattleTooltips.isLocked) return;\r\n\t\tthis.showTooltip(e.currentTarget as HTMLElement);\r\n\t};\r\n\r\n\t/**\r\n\t * Only hides tooltips if they're not locked\r\n\t */\r\n\tstatic unshowTooltip() {\r\n\t\tif (BattleTooltips.isLocked) return;\r\n\t\tif (BattleTooltips.isPressed) {\r\n\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\r\n\t\t\tBattleTooltips.isPressed = false;\r\n\t\t}\r\n\t\tBattleTooltips.hideTooltip();\r\n\t}\r\n\r\n\tshowTooltip(elem: HTMLElement) {\r\n\t\tconst args = (elem.dataset.tooltip || '').split('|');\r\n\t\tconst [type] = args;\r\n\t\t/**\r\n\t\t * If false, we instead attach the tooltip above the parent element.\r\n\t\t * This is important for the move/switch menus so the tooltip doesn't\r\n\t\t * cover up buttons above the hovered button.\r\n\t\t */\r\n\t\tlet ownHeight = !!elem.dataset.ownheight;\r\n\r\n\t\tlet buf: string;\r\n\t\tswitch (type) {\r\n\t\tcase 'move':\r\n\t\tcase 'zmove':\r\n\t\tcase 'maxmove': { // move|MOVE|ACTIVEPOKEMON|[GMAXMOVE]\r\n\t\t\tlet move = this.battle.dex.moves.get(args[1]);\r\n\t\t\tlet teamIndex = parseInt(args[2], 10);\r\n\t\t\tlet pokemon = this.battle.nearSide.active[\r\n\t\t\t\tteamIndex + this.battle.pokemonControlled * Math.floor(this.battle.mySide.n / 2)\r\n\t\t\t];\r\n\t\t\tlet gmaxMove = args[3] ? this.battle.dex.moves.get(args[3]) : undefined;\r\n\t\t\tif (!pokemon) return false;\r\n\t\t\tlet serverPokemon = this.battle.myPokemon![teamIndex];\r\n\t\t\tbuf = this.showMoveTooltip(move, type, pokemon, serverPokemon, gmaxMove);\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcase 'pokemon': { // pokemon|SIDE|POKEMON\r\n\t\t\t// mouse over sidebar pokemon\r\n\t\t\t// pokemon definitely exists, serverPokemon always ignored\r\n\t\t\tlet sideIndex = parseInt(args[1], 10);\r\n\t\t\tlet side = this.battle.sides[sideIndex];\r\n\t\t\tlet pokemon = side.pokemon[parseInt(args[2], 10)];\r\n\t\t\tif (args[3] === 'illusion') {\r\n\t\t\t\tbuf = '';\r\n\t\t\t\tconst species = pokemon.getBaseSpecies().baseSpecies;\r\n\t\t\t\tlet index = 1;\r\n\t\t\t\tfor (const otherPokemon of side.pokemon) {\r\n\t\t\t\t\tif (otherPokemon.getBaseSpecies().baseSpecies === species) {\r\n\t\t\t\t\t\tbuf += this.showPokemonTooltip(otherPokemon, null, false, index);\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbuf = this.showPokemonTooltip(pokemon);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'activepokemon': { // activepokemon|SIDE|ACTIVE\r\n\t\t\t// mouse over active pokemon\r\n\t\t\t// pokemon definitely exists, serverPokemon maybe\r\n\t\t\tlet sideIndex = parseInt(args[1], 10);\r\n\t\t\tlet side = this.battle.sides[+this.battle.sidesSwitched ^ sideIndex];\r\n\t\t\tlet activeIndex = parseInt(args[2], 10);\r\n\t\t\tlet pokemonIndex = activeIndex;\r\n\t\t\tif (activeIndex >= 1 && this.battle.sides.length > 2) {\r\n\t\t\t\tpokemonIndex -= 1;\r\n\t\t\t\tside = this.battle.sides[side.n + 2];\r\n\t\t\t}\r\n\t\t\tlet pokemon = side.active[activeIndex];\r\n\t\t\tlet serverPokemon = null;\r\n\t\t\tif (side === this.battle.mySide && this.battle.myPokemon) {\r\n\t\t\t\tserverPokemon = this.battle.myPokemon[pokemonIndex];\r\n\t\t\t}\r\n\t\t\tif (side === this.battle.mySide.ally && this.battle.myAllyPokemon) {\r\n\t\t\t\tserverPokemon = this.battle.myAllyPokemon[pokemonIndex];\r\n\t\t\t}\r\n\t\t\tif (!pokemon) return false;\r\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon, true);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switchpokemon': { // switchpokemon|POKEMON\r\n\t\t\t// mouse over switchable pokemon\r\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\r\n\t\t\t// let side = this.battle.mySide;\r\n\t\t\tlet activeIndex = parseInt(args[1], 10);\r\n\t\t\tlet pokemon = null;\r\n\t\t\t/* if (activeIndex < side.active.length && activeIndex < this.battle.pokemonControlled) {\r\n\t\t\t\tpokemon = side.active[activeIndex];\r\n\t\t\t\tif (pokemon && pokemon.side === side.ally) pokemon = null;\r\n\t\t\t} */\r\n\t\t\tlet serverPokemon = this.battle.myPokemon![activeIndex];\r\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'allypokemon': { // allypokemon|POKEMON\r\n\t\t\t// mouse over ally's pokemon in multi battles\r\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\r\n\t\t\t// let side = this.battle.mySide.ally;\r\n\t\t\tlet activeIndex = parseInt(args[1], 10);\r\n\t\t\tlet pokemon = null;\r\n\t\t\t/*if (activeIndex < side.pokemon.length) {\r\n\t\t\t\tpokemon = side.pokemon[activeIndex] || side.ally ? side.ally.pokemon[activeIndex] : null;\r\n\t\t\t}*/\r\n\t\t\tlet serverPokemon = this.battle.myAllyPokemon ? this.battle.myAllyPokemon[activeIndex] : null;\r\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'field': {\r\n\t\t\tbuf = this.showFieldTooltip();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\t// \"throws\" an error without crashing\r\n\t\t\tPromise.resolve(new Error(`unrecognized type`));\r\n\t\t\tbuf = `<p class=\"message-error\" style=\"white-space: pre-wrap\">${new Error(`unrecognized type`).stack}</p>`;\r\n\t\t}\r\n\r\n\t\tthis.placeTooltip(buf, elem, ownHeight, type);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tplaceTooltip(innerHTML: string, hoveredElem?: HTMLElement, notRelativeToParent?: boolean, type?: string) {\r\n\t\tlet $elem;\r\n\t\tif (hoveredElem) {\r\n\t\t\t$elem = $(hoveredElem);\r\n\t\t} else {\r\n\t\t\t$elem = (this.battle.scene as BattleScene).$turn;\r\n\t\t\tnotRelativeToParent = true;\r\n\t\t}\r\n\r\n\t\tlet hoveredX1 = $elem.offset()!.left;\r\n\r\n\t\tif (!notRelativeToParent) {\r\n\t\t\t$elem = $elem.parent();\r\n\t\t}\r\n\r\n\t\tlet hoveredY1 = $elem.offset()!.top;\r\n\t\tlet hoveredY2 = hoveredY1 + $elem.outerHeight()!;\r\n\r\n\t\t// (x, y) are the left and top offsets of #tooltipwrapper, which mark the\r\n\t\t// BOTTOM LEFT CORNER of the tooltip\r\n\r\n\t\tlet x = Math.max(hoveredX1 - 2, 0);\r\n\t\tlet y = Math.max(hoveredY1 - 5, 0);\r\n\r\n\t\tlet $wrapper = $('#tooltipwrapper');\r\n\t\tif (!$wrapper.length) {\r\n\t\t\t$wrapper = $(`<div id=\"tooltipwrapper\" role=\"tooltip\"></div>`);\r\n\t\t\t$(document.body).append($wrapper);\r\n\t\t\t$wrapper.on('click', e => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst selection = window.getSelection()!;\r\n\t\t\t\t\tif (selection.type === 'Range') return;\r\n\t\t\t\t} catch (err) {}\r\n\t\t\t\tBattleTooltips.hideTooltip();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t$wrapper.removeClass('tooltip-locked');\r\n\t\t}\r\n\t\t$wrapper.css({\r\n\t\t\tleft: x,\r\n\t\t\ttop: y,\r\n\t\t});\r\n\t\tinnerHTML = `<div class=\"tooltipinner\"><div class=\"tooltip tooltip-${type}\">${innerHTML}</div></div>`;\r\n\t\t$wrapper.html(innerHTML).appendTo(document.body);\r\n\t\tBattleTooltips.elem = $wrapper.find('.tooltip')[0] as HTMLDivElement;\r\n\t\tBattleTooltips.isLocked = false;\r\n\r\n\t\tlet height = $(BattleTooltips.elem).outerHeight()!;\r\n\t\tif (y - height < 1) {\r\n\t\t\t// tooltip is too tall to fit above the element:\r\n\t\t\t// try to fit it below it instead\r\n\t\t\ty = hoveredY2 + height + 5;\r\n\t\t\tif (y > document.documentElement.clientHeight) {\r\n\t\t\t\t// tooltip is also too tall to fit below the element:\r\n\t\t\t\t// just place it at the top of the screen\r\n\t\t\t\ty = height + 1;\r\n\t\t\t}\r\n\t\t\t$wrapper.css('top', y);\r\n\t\t} else if (y < 75) {\r\n\t\t\t// tooltip is pretty high up, put it below the element if it fits\r\n\t\t\ty = hoveredY2 + height + 5;\r\n\t\t\tif (y < document.documentElement.clientHeight) {\r\n\t\t\t\t// it fits\r\n\t\t\t\t$wrapper.css('top', y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet width = $(BattleTooltips.elem).outerWidth()!;\r\n\t\tif (x > document.documentElement.clientWidth - width - 2) {\r\n\t\t\tx = document.documentElement.clientWidth - width - 2;\r\n\t\t\t$wrapper.css('left', x);\r\n\t\t}\r\n\r\n\t\tBattleTooltips.parentElem = hoveredElem || null;\r\n\t\treturn true;\r\n\t}\r\n\r\n\thideTooltip() {\r\n\t\tBattleTooltips.hideTooltip();\r\n\t}\r\n\r\n\tstatic zMoveEffects: {[zEffect: string]: string} = {\r\n\t\t'clearnegativeboost': \"Restores negative stat stages to 0\",\r\n\t\t'crit2': \"Crit ratio +2\",\r\n\t\t'heal': \"Restores HP 100%\",\r\n\t\t'curse': \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\r\n\t\t'redirect': \"Redirects opposing attacks to user\",\r\n\t\t'healreplacement': \"Restores replacement's HP 100%\",\r\n\t};\r\n\r\n\tgetStatusZMoveEffect(move: Move) {\r\n\t\tif (move.zMove!.effect! in BattleTooltips.zMoveEffects) {\r\n\t\t\treturn BattleTooltips.zMoveEffects[move.zMove!.effect!];\r\n\t\t}\r\n\t\tlet boostText = '';\r\n\t\tif (move.zMove!.boost) {\r\n\t\t\tlet boosts = Object.keys(move.zMove!.boost) as StatName[];\r\n\t\t\tboostText = boosts.map(stat =>\r\n\t\t\t\tBattleTextParser.stat(stat) + ' +' + move.zMove!.boost![stat]\r\n\t\t\t).join(', ');\r\n\t\t}\r\n\t\treturn boostText;\r\n\t}\r\n\r\n\tstatic zMoveTable: {[type in TypeName]: string} = {\r\n\t\tPoison: \"Acid Downpour\",\r\n\t\tFighting: \"All-Out Pummeling\",\r\n\t\tDark: \"Black Hole Eclipse\",\r\n\t\tGrass: \"Bloom Doom\",\r\n\t\tNormal: \"Breakneck Blitz\",\r\n\t\tRock: \"Continental Crush\",\r\n\t\tSteel: \"Corkscrew Crash\",\r\n\t\tDragon: \"Devastating Drake\",\r\n\t\tElectric: \"Gigavolt Havoc\",\r\n\t\tWater: \"Hydro Vortex\",\r\n\t\tFire: \"Inferno Overdrive\",\r\n\t\tGhost: \"Never-Ending Nightmare\",\r\n\t\tBug: \"Savage Spin-Out\",\r\n\t\tPsychic: \"Shattered Psyche\",\r\n\t\tIce: \"Subzero Slammer\",\r\n\t\tFlying: \"Supersonic Skystrike\",\r\n\t\tGround: \"Tectonic Rage\",\r\n\t\tFairy: \"Twinkle Tackle\",\r\n\t\t\"???\": \"\",\r\n\t};\r\n\r\n\tstatic maxMoveTable: {[type in TypeName]: string} = {\r\n\t\tPoison: \"Max Ooze\",\r\n\t\tFighting: \"Max Knuckle\",\r\n\t\tDark: \"Max Darkness\",\r\n\t\tGrass: \"Max Overgrowth\",\r\n\t\tNormal: \"Max Strike\",\r\n\t\tRock: \"Max Rockfall\",\r\n\t\tSteel: \"Max Steelspike\",\r\n\t\tDragon: \"Max Wyrmwind\",\r\n\t\tElectric: \"Max Lightning\",\r\n\t\tWater: \"Max Geyser\",\r\n\t\tFire: \"Max Flare\",\r\n\t\tGhost: \"Max Phantasm\",\r\n\t\tBug: \"Max Flutterby\",\r\n\t\tPsychic: \"Max Mindstorm\",\r\n\t\tIce: \"Max Hailstorm\",\r\n\t\tFlying: \"Max Airstream\",\r\n\t\tGround: \"Max Quake\",\r\n\t\tFairy: \"Max Starfall\",\r\n\t\t\"???\": \"\",\r\n\t};\r\n\r\n\tgetMaxMoveFromType(type: TypeName, gmaxMove?: string | Move) {\r\n\t\tif (gmaxMove) {\r\n\t\t\tgmaxMove = Dex.moves.get(gmaxMove);\r\n\t\t\tif (type === gmaxMove.type) return gmaxMove;\r\n\t\t}\r\n\t\treturn Dex.moves.get(BattleTooltips.maxMoveTable[type]);\r\n\t}\r\n\r\n\tshowMoveTooltip(move: Move, isZOrMax: string, pokemon: Pokemon, serverPokemon: ServerPokemon, gmaxMove?: Move) {\r\n\t\tlet text = '';\r\n\r\n\t\tlet zEffect = '';\r\n\t\tlet foeActive = pokemon.side.foe.active;\r\n\t\tif (this.battle.gameType === 'freeforall') {\r\n\t\t\tfoeActive = [...foeActive, ...pokemon.side.active].filter(active => active !== pokemon);\r\n\t\t}\r\n\t\t// TODO: move this somewhere it makes more sense\r\n\t\tif (pokemon.ability === '(suppressed)') serverPokemon.ability = '(suppressed)';\r\n\t\tlet ability = toID(serverPokemon.ability || pokemon.ability || serverPokemon.baseAbility);\r\n\t\tlet item = this.battle.dex.items.get(serverPokemon.item);\r\n\r\n\t\tlet value = new ModifiableValue(this.battle, pokemon, serverPokemon);\r\n\t\tlet [moveType, category] = this.getMoveType(move, value, gmaxMove || isZOrMax === 'maxmove');\r\n\r\n\t\tif (isZOrMax === 'zmove') {\r\n\t\t\tif (item.zMoveFrom === move.name) {\r\n\t\t\t\tmove = this.battle.dex.moves.get(item.zMove as string);\r\n\t\t\t} else if (move.category === 'Status') {\r\n\t\t\t\tmove = new Move(move.id, \"\", {\r\n\t\t\t\t\t...move,\r\n\t\t\t\t\tname: 'Z-' + move.name,\r\n\t\t\t\t});\r\n\t\t\t\tzEffect = this.getStatusZMoveEffect(move);\r\n\t\t\t} else {\r\n\t\t\t\tlet moveName = BattleTooltips.zMoveTable[item.zMoveType as TypeName];\r\n\t\t\t\tlet zMove = this.battle.dex.moves.get(moveName);\r\n\t\t\t\tlet movePower = move.zMove!.basePower;\r\n\t\t\t\t// the different Hidden Power types don't have a Z power set, fall back on base move\r\n\t\t\t\tif (!movePower && move.id.startsWith('hiddenpower')) {\r\n\t\t\t\t\tmovePower = this.battle.dex.moves.get('hiddenpower').zMove!.basePower;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.id === 'weatherball') {\r\n\t\t\t\t\tswitch (this.battle.weather) {\r\n\t\t\t\t\tcase 'sunnyday':\r\n\t\t\t\t\tcase 'desolateland':\r\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Fire']);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'raindance':\r\n\t\t\t\t\tcase 'primordialsea':\r\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Water']);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'sandstorm':\r\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Rock']);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'hail':\r\n\t\t\t\t\tcase 'snow':\r\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Ice']);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmove = new Move(zMove.id, zMove.name, {\r\n\t\t\t\t\t...zMove,\r\n\t\t\t\t\tcategory: move.category,\r\n\t\t\t\t\tbasePower: movePower,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (isZOrMax === 'maxmove') {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tmove = this.battle.dex.moves.get('Max Guard');\r\n\t\t\t} else {\r\n\t\t\t\tlet maxMove = this.getMaxMoveFromType(moveType, gmaxMove);\r\n\t\t\t\tconst basePower = ['gmaxdrumsolo', 'gmaxfireball', 'gmaxhydrosnipe'].includes(maxMove.id) ?\r\n\t\t\t\t\tmaxMove.basePower : move.maxMove.basePower;\r\n\t\t\t\tmove = new Move(maxMove.id, maxMove.name, {\r\n\t\t\t\t\t...maxMove,\r\n\t\t\t\t\tcategory: move.category,\r\n\t\t\t\t\tbasePower,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttext += '<h2>' + move.name + '<br />';\r\n\r\n\t\ttext += Dex.getTypeIcon(moveType);\r\n\t\ttext += ` ${Dex.getCategoryIcon(category)}</h2>`;\r\n\r\n\t\t// Check if there are more than one active Pokémon to check for multiple possible BPs.\r\n\t\tlet showingMultipleBasePowers = false;\r\n\t\tif (category !== 'Status' && foeActive.length > 1) {\r\n\t\t\t// We check if there is a difference in base powers to note it.\r\n\t\t\t// Otherwise, it is just shown as in singles.\r\n\t\t\t// The trick is that we need to calculate it first for each Pokémon to see if it changes.\r\n\t\t\tlet prevBasePower: string | null = null;\r\n\t\t\tlet basePower: string = '';\r\n\t\t\tlet difference = false;\r\n\t\t\tlet basePowers = [];\r\n\t\t\tfor (const active of foeActive) {\r\n\t\t\t\tif (!active) continue;\r\n\t\t\t\tvalue = this.getMoveBasePower(move, moveType, value, active);\r\n\t\t\t\tbasePower = '' + value;\r\n\t\t\t\tif (prevBasePower === null) prevBasePower = basePower;\r\n\t\t\t\tif (prevBasePower !== basePower) difference = true;\r\n\t\t\t\tbasePowers.push('Base power vs ' + active.name + ': ' + basePower);\r\n\t\t\t}\r\n\t\t\tif (difference) {\r\n\t\t\t\ttext += '<p>' + basePowers.join('<br />') + '</p>';\r\n\t\t\t\tshowingMultipleBasePowers = true;\r\n\t\t\t}\r\n\t\t\t// Falls through to not to repeat code on showing the base power.\r\n\t\t}\r\n\t\tif (!showingMultipleBasePowers && category !== 'Status') {\r\n\t\t\tlet activeTarget = foeActive[0] || foeActive[1] || foeActive[2];\r\n\t\t\tvalue = this.getMoveBasePower(move, moveType, value, activeTarget);\r\n\t\t\ttext += '<p>Base power: ' + value + '</p>';\r\n\t\t}\r\n\r\n\t\tlet accuracy = this.getMoveAccuracy(move, value);\r\n\r\n\t\t// Deal with Nature Power special case, indicating which move it calls.\r\n\t\tif (move.id === 'naturepower') {\r\n\t\t\tlet calls;\r\n\t\t\tif (this.battle.gen > 5) {\r\n\t\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\r\n\t\t\t\t\tcalls = 'Thunderbolt';\r\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\r\n\t\t\t\t\tcalls = 'Energy Ball';\r\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\r\n\t\t\t\t\tcalls = 'Moonblast';\r\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\r\n\t\t\t\t\tcalls = 'Psychic';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcalls = 'Tri Attack';\r\n\t\t\t\t}\r\n\t\t\t} else if (this.battle.gen > 3) {\r\n\t\t\t\t// In gens 4 and 5 it calls Earthquake.\r\n\t\t\t\tcalls = 'Earthquake';\r\n\t\t\t} else {\r\n\t\t\t\t// In gen 3 it calls Swift, so it retains its normal typing.\r\n\t\t\t\tcalls = 'Swift';\r\n\t\t\t}\r\n\t\t\tlet calledMove = this.battle.dex.moves.get(calls);\r\n\t\t\ttext += 'Calls ' + Dex.getTypeIcon(this.getMoveType(calledMove, value)[0]) + ' ' + calledMove.name;\r\n\t\t}\r\n\r\n\t\ttext += '<p>Accuracy: ' + accuracy + '</p>';\r\n\t\tif (zEffect) text += '<p>Z-Effect: ' + zEffect + '</p>';\r\n\r\n\t\tif (this.battle.hardcoreMode) {\r\n\t\t\ttext += '<p class=\"section\">' + move.shortDesc + '</p>';\r\n\t\t} else {\r\n\t\t\ttext += '<p class=\"section\">';\r\n\t\t\tif (move.priority > 1) {\r\n\t\t\t\ttext += 'Nearly always moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\r\n\t\t\t} else if (move.priority <= -1) {\r\n\t\t\t\ttext += 'Nearly always moves last <em>(priority &minus;' + (-move.priority) + ')</em>.</p><p>';\r\n\t\t\t} else if (move.priority === 1) {\r\n\t\t\t\ttext += 'Usually moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\r\n\t\t\t} else {\r\n\t\t\t\tif (move.id === 'grassyglide' && this.battle.hasPseudoWeather('Grassy Terrain')) {\r\n\t\t\t\t\ttext += 'Usually moves first <em>(priority +1)</em>.</p><p>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext += '' + (move.desc || move.shortDesc || '') + '</p>';\r\n\r\n\t\t\tif (this.battle.gameType === 'doubles' || this.battle.gameType === 'multi') {\r\n\t\t\t\tif (move.target === 'allAdjacent') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes and ally.</p>';\r\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes.</p>';\r\n\t\t\t\t}\r\n\t\t\t} else if (this.battle.gameType === 'triples') {\r\n\t\t\t\tif (move.target === 'allAdjacent') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes and allies.</p>';\r\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes.</p>';\r\n\t\t\t\t} else if (move.target === 'any') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Can target distant Pok&eacute;mon in Triples.</p>';\r\n\t\t\t\t}\r\n\t\t\t} else if (this.battle.gameType === 'freeforall') {\r\n\t\t\t\tif (move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Hits all foes.</p>';\r\n\t\t\t\t} else if (move.target === 'adjacentAlly') {\r\n\t\t\t\t\ttext += '<p>&#x25ce; Can target any foe in Free-For-All.</p>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (move.flags.defrost) {\r\n\t\t\t\ttext += `<p class=\"movetag\">The user thaws out if it is frozen.</p>`;\r\n\t\t\t}\r\n\t\t\tif (!move.flags.protect && !['self', 'allySide'].includes(move.target)) {\r\n\t\t\t\ttext += `<p class=\"movetag\">Not blocked by Protect <small>(and Detect, King's Shield, Spiky Shield)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.bypasssub) {\r\n\t\t\t\ttext += `<p class=\"movetag\">Bypasses Substitute <small>(but does not break it)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (!move.flags.reflectable && !['self', 'allySide'].includes(move.target) && move.category === 'Status') {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Not bounceable <small>(can't be bounced by Magic Coat/Bounce)</small></p>`;\r\n\t\t\t}\r\n\r\n\t\t\tif (move.flags.contact) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Contact <small>(triggers Iron Barbs, Spiky Shield, etc)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.sound) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Sound <small>(doesn't affect Soundproof pokemon)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.powder && this.battle.gen > 5) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Powder <small>(doesn't affect Grass, Overcoat, Safety Goggles)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.punch && ability === 'ironfist') {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Fist <small>(boosted by Iron Fist)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.pulse && ability === 'megalauncher') {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Pulse <small>(boosted by Mega Launcher)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.bite && ability === 'strongjaw') {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bite <small>(boosted by Strong Jaw)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif ((move.recoil || move.hasCrashDamage) && ability === 'reckless') {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Recoil <small>(boosted by Reckless)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.bullet) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bullet-like <small>(doesn't affect Bulletproof pokemon)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.slicing) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Slicing <small>(boosted by Sharpness)</small></p>`;\r\n\t\t\t}\r\n\t\t\tif (move.flags.wind) {\r\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Wind <small>(activates Wind Power and Wind Rider)</small></p>`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\r\n\t/**\r\n\t * Needs either a Pokemon or a ServerPokemon, but note that neither\r\n\t * are guaranteed: If you hover over a possible switch-in that's\r\n\t * never been switched in before, you'll only have a ServerPokemon,\r\n\t * and if you hover over an opponent's pokemon, you'll only have a\r\n\t * Pokemon.\r\n\t *\r\n\t * isActive is true if hovering over a pokemon in the battlefield,\r\n\t * and false if hovering over a pokemon in the Switch menu.\r\n\t *\r\n\t * @param clientPokemon\r\n\t * @param serverPokemon\r\n\t * @param isActive\r\n\t */\r\n\tshowPokemonTooltip(\r\n\t\tclientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, isActive?: boolean, illusionIndex?: number\r\n\t) {\r\n\t\tconst pokemon = clientPokemon || serverPokemon!;\r\n\t\tlet text = '';\r\n\t\tlet genderBuf = '';\r\n\t\tconst gender = pokemon.gender;\r\n\t\tif (gender === 'M' || gender === 'F') {\r\n\t\t\tgenderBuf = ` <img src=\"${Dex.fxPrefix}gender-${gender.toLowerCase()}.png\" alt=\"${gender}\" width=\"7\" height=\"10\" class=\"pixelated\" /> `;\r\n\t\t}\r\n\r\n\t\tlet name = BattleLog.escapeHTML(pokemon.name);\r\n\t\tif (pokemon.speciesForme !== pokemon.name) {\r\n\t\t\tname += ' <small>(' + BattleLog.escapeHTML(pokemon.speciesForme) + ')</small>';\r\n\t\t}\r\n\r\n\t\tlet levelBuf = (pokemon.level !== 100 ? ` <small>L${pokemon.level}</small>` : ``);\r\n\t\tif (!illusionIndex || illusionIndex === 1) {\r\n\t\t\ttext += `<h2>${name}${genderBuf}${illusionIndex ? '' : levelBuf}<br />`;\r\n\r\n\t\t\tif (clientPokemon?.volatiles.formechange) {\r\n\t\t\t\tif (clientPokemon.volatiles.transform) {\r\n\t\t\t\t\ttext += `<small>(Transformed into ${clientPokemon.volatiles.formechange[1]})</small><br />`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext += `<small>(Changed forme: ${clientPokemon.volatiles.formechange[1]})</small><br />`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet types = serverPokemon?.terastallized ? [serverPokemon.teraType] : this.getPokemonTypes(pokemon);\r\n\r\n\t\t\tif (pokemon.terastallized) {\r\n\t\t\t\ttext += `<small>(Terastallized)</small><br />`;\r\n\t\t\t} else if (clientPokemon?.volatiles.typechange || clientPokemon?.volatiles.typeadd) {\r\n\t\t\t\ttext += `<small>(Type changed)</small><br />`;\r\n\t\t\t}\r\n\t\t\ttext += `<span class=\"textaligned-typeicons\">${types.map(type => Dex.getTypeIcon(type)).join(' ')}</span>`;\r\n\t\t\tif (pokemon.terastallized) {\r\n\t\t\t\ttext += `&nbsp; &nbsp; <small>(base: <span class=\"textaligned-typeicons\">${this.getPokemonTypes(pokemon, true).map(type => Dex.getTypeIcon(type)).join(' ')}</span>)</small>`;\r\n\t\t\t} else if (serverPokemon?.teraType && !this.battle.rules['Terastal Clause']) {\r\n\t\t\t\ttext += `&nbsp; &nbsp; <small>(Tera Type: <span class=\"textaligned-typeicons\">${Dex.getTypeIcon(serverPokemon.teraType)}</span>)</small>`;\r\n\t\t\t}\r\n\t\t\ttext += `</h2>`;\r\n\t\t}\r\n\r\n\t\tif (illusionIndex) {\r\n\t\t\ttext += `<p class=\"section\"><strong>Possible Illusion #${illusionIndex}</strong>${levelBuf}</p>`;\r\n\t\t}\r\n\r\n\t\tif (pokemon.fainted) {\r\n\t\t\ttext += '<p><small>HP:</small> (fainted)</p>';\r\n\t\t} else if (this.battle.hardcoreMode) {\r\n\t\t\tif (serverPokemon) {\r\n\t\t\t\ttext += '<p><small>HP:</small> ' + serverPokemon.hp + '/' + serverPokemon.maxhp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '') + '</p>';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet exacthp = '';\r\n\t\t\tif (serverPokemon) {\r\n\t\t\t\texacthp = ' (' + serverPokemon.hp + '/' + serverPokemon.maxhp + ')';\r\n\t\t\t} else if (pokemon.maxhp === 48) {\r\n\t\t\t\texacthp = ' <small>(' + pokemon.hp + '/' + pokemon.maxhp + ' pixels)</small>';\r\n\t\t\t}\r\n\t\t\ttext += '<p><small>HP:</small> ' + Pokemon.getHPText(pokemon) + exacthp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '');\r\n\t\t\tif (clientPokemon) {\r\n\t\t\t\tif (pokemon.status === 'tox') {\r\n\t\t\t\t\tif (pokemon.ability === 'Poison Heal' || pokemon.ability === 'Magic Guard') {\r\n\t\t\t\t\t\ttext += ' <small>Would take if ability removed: ' + Math.floor(100 / 16 * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%</small>';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttext += ' Next damage: ' + Math.floor(100 / (clientPokemon.volatiles['dynamax'] ? 32 : 16) * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (pokemon.status === 'slp') {\r\n\t\t\t\t\ttext += ' Turns asleep: ' + clientPokemon.statusData.sleepTurns;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttext += '</p>';\r\n\t\t}\r\n\r\n\t\tconst supportsAbilities = this.battle.gen > 2 && !this.battle.tier.includes(\"Let's Go\");\r\n\r\n\t\tlet abilityText = '';\r\n\t\tif (supportsAbilities) {\r\n\t\t\tabilityText = this.getPokemonAbilityText(\r\n\t\t\t\tclientPokemon, serverPokemon, isActive, !!illusionIndex && illusionIndex > 1\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet itemText = '';\r\n\t\tif (serverPokemon) {\r\n\t\t\tlet item = '';\r\n\t\t\tlet itemEffect = '';\r\n\t\t\tif (clientPokemon?.prevItem) {\r\n\t\t\t\titem = 'None';\r\n\t\t\t\tlet prevItem = Dex.items.get(clientPokemon.prevItem).name;\r\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\r\n\t\t\t}\r\n\t\t\tif (serverPokemon.item) item = Dex.items.get(serverPokemon.item).name;\r\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\r\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\r\n\t\t} else if (clientPokemon) {\r\n\t\t\tlet item = '';\r\n\t\t\tlet itemEffect = clientPokemon.itemEffect || '';\r\n\t\t\tif (clientPokemon.prevItem) {\r\n\t\t\t\titem = 'None';\r\n\t\t\t\tif (itemEffect) itemEffect += '; ';\r\n\t\t\t\tlet prevItem = Dex.items.get(clientPokemon.prevItem).name;\r\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\r\n\t\t\t}\r\n\t\t\tif (pokemon.item) item = Dex.items.get(pokemon.item).name;\r\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\r\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\r\n\t\t}\r\n\r\n\t\tif (abilityText || itemText) {\r\n\t\t\ttext += '<p>';\r\n\t\t\ttext += abilityText;\r\n\t\t\tif (abilityText && itemText) {\r\n\t\t\t\t// ability/item on one line for your own switch tooltips, two lines everywhere else\r\n\t\t\t\ttext += (!isActive && serverPokemon ? ' / ' : '</p><p>');\r\n\t\t\t}\r\n\t\t\ttext += itemText;\r\n\t\t\ttext += '</p>';\r\n\t\t}\r\n\r\n\t\ttext += this.renderStats(clientPokemon, serverPokemon, !isActive);\r\n\r\n\t\tif (serverPokemon && !isActive) {\r\n\t\t\t// move list\r\n\t\t\ttext += `<p class=\"section\">`;\r\n\t\t\tconst battlePokemon = clientPokemon || this.battle.findCorrespondingPokemon(pokemon);\r\n\t\t\tfor (const moveid of serverPokemon.moves) {\r\n\t\t\t\tconst move = Dex.moves.get(moveid);\r\n\t\t\t\tlet moveName = `&#8226; ${move.name}`;\r\n\t\t\t\tif (battlePokemon?.moveTrack) {\r\n\t\t\t\t\tfor (const row of battlePokemon.moveTrack) {\r\n\t\t\t\t\t\tif (moveName === row[0]) {\r\n\t\t\t\t\t\t\tmoveName = this.getPPUseText(row, true);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttext += `${moveName}<br />`;\r\n\t\t\t}\r\n\t\t\ttext += '</p>';\r\n\t\t} else if (!this.battle.hardcoreMode && clientPokemon?.moveTrack.length) {\r\n\t\t\t// move list (guessed)\r\n\t\t\ttext += `<p class=\"section\">`;\r\n\t\t\tfor (const row of clientPokemon.moveTrack) {\r\n\t\t\t\ttext += `${this.getPPUseText(row)}<br />`;\r\n\t\t\t}\r\n\t\t\tif (clientPokemon.moveTrack.filter(([moveName]) => {\r\n\t\t\t\tif (moveName.charAt(0) === '*') return false;\r\n\t\t\t\tconst move = this.battle.dex.moves.get(moveName);\r\n\t\t\t\treturn !move.isZ && !move.isMax && move.name !== 'Mimic';\r\n\t\t\t}).length > 4) {\r\n\t\t\t\ttext += `(More than 4 moves is usually a sign of Illusion Zoroark/Zorua.) `;\r\n\t\t\t}\r\n\t\t\tif (this.battle.gen === 3) {\r\n\t\t\t\ttext += `(Pressure is not visible in Gen 3, so in certain situations, more PP may have been lost than shown here.) `;\r\n\t\t\t}\r\n\t\t\tif (this.pokemonHasClones(clientPokemon)) {\r\n\t\t\t\ttext += `(Your opponent has two indistinguishable Pokémon, making it impossible for you to tell which one has which moves/ability/item.) `;\r\n\t\t\t}\r\n\t\t\ttext += `</p>`;\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\r\n\tshowFieldTooltip() {\r\n\t\tconst scene = this.battle.scene as BattleScene;\r\n\t\tlet buf = `<table style=\"border: 0; border-collapse: collapse; vertical-align: top; padding: 0; width: 100%\"><tr>`;\r\n\r\n\t\tlet atLeastOne = false;\r\n\t\tfor (const side of this.battle.sides) {\r\n\t\t\tconst sideConditions = scene.sideConditionsLeft(side, true);\r\n\t\t\tif (sideConditions) atLeastOne = true;\r\n\t\t\tbuf += `<td><p class=\"section\"><strong>${BattleLog.escapeHTML(side.name)}</strong>${sideConditions || \"<br />(no conditions)\"}</p></td>`;\r\n\t\t}\r\n\t\tbuf += `</tr><table>`;\r\n\t\tif (!atLeastOne) buf = ``;\r\n\r\n\t\tlet weatherbuf = scene.weatherLeft() || `(no weather)`;\r\n\t\tif (weatherbuf.startsWith('<br />')) {\r\n\t\t\tweatherbuf = weatherbuf.slice(6);\r\n\t\t}\r\n\t\tbuf = `<p>${weatherbuf}</p>` + buf;\r\n\t\treturn `<p>${buf}</p>`;\r\n\t}\r\n\r\n\t/**\r\n\t * Does this Pokémon's trainer have two of these Pokémon that are\r\n\t * indistinguishable? (Same nickname, species, forme, level, gender,\r\n\t * and shininess.)\r\n\t */\r\n\tpokemonHasClones(pokemon: Pokemon) {\r\n\t\tconst side = pokemon.side;\r\n\t\tif (side.battle.speciesClause) return false;\r\n\t\tfor (const ally of side.pokemon) {\r\n\t\t\tif (pokemon !== ally && pokemon.searchid === ally.searchid) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcalculateModifiedStats(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon) {\r\n\t\tlet stats = {...serverPokemon.stats};\r\n\t\tlet pokemon = clientPokemon || serverPokemon;\r\n\t\tconst isPowerTrick = clientPokemon?.volatiles['powertrick'];\r\n\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\tlet sourceStatName = statName;\r\n\t\t\tif (isPowerTrick) {\r\n\t\t\t\tif (statName === 'atk') sourceStatName = 'def';\r\n\t\t\t\tif (statName === 'def') sourceStatName = 'atk';\r\n\t\t\t}\r\n\t\t\tstats[statName] = serverPokemon.stats[sourceStatName];\r\n\t\t\tif (!clientPokemon) continue;\r\n\r\n\t\t\tconst clientStatName = clientPokemon.boosts.spc && (statName === 'spa' || statName === 'spd') ? 'spc' : statName;\r\n\t\t\tconst boostLevel = clientPokemon.boosts[clientStatName];\r\n\t\t\tif (boostLevel) {\r\n\t\t\t\tlet boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\r\n\t\t\t\tif (boostLevel > 0) {\r\n\t\t\t\t\tstats[statName] *= boostTable[boostLevel];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.battle.gen <= 2) boostTable = [1, 100 / 66, 2, 2.5, 100 / 33, 100 / 28, 4];\r\n\t\t\t\t\tstats[statName] /= boostTable[-boostLevel];\r\n\t\t\t\t}\r\n\t\t\t\tstats[statName] = Math.floor(stats[statName]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst ability = toID(\r\n\t\t\tclientPokemon?.effectiveAbility(serverPokemon) ?? (serverPokemon.ability || serverPokemon.baseAbility)\r\n\t\t);\r\n\r\n\t\t// check for burn, paralysis, guts, quick feet\r\n\t\tif (pokemon.status) {\r\n\t\t\tif (this.battle.gen > 2 && ability === 'guts') {\r\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\r\n\t\t\t} else if (this.battle.gen < 2 && pokemon.status === 'brn') {\r\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.battle.gen > 2 && ability === 'quickfeet') {\r\n\t\t\t\tstats.spe = Math.floor(stats.spe * 1.5);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// gen 1 doesn't support items\r\n\t\tif (this.battle.gen <= 1) {\r\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\t\tif (stats[statName] > 999) stats[statName] = 999;\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon.item);\r\n\t\tlet speedHalvingEVItems = ['machobrace', 'poweranklet', 'powerband', 'powerbelt', 'powerbracer', 'powerlens', 'powerweight'];\r\n\t\tif (\r\n\t\t\t(ability === 'klutz' && !speedHalvingEVItems.includes(item)) ||\r\n\t\t\tthis.battle.hasPseudoWeather('Magic Room') ||\r\n\t\t\tclientPokemon?.volatiles['embargo']\r\n\t\t) {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tconst species = Dex.species.get(serverPokemon.speciesForme).baseSpecies;\r\n\t\tconst isTransform = clientPokemon?.volatiles.transform;\r\n\t\tconst speciesName = isTransform && clientPokemon?.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\r\n\t\t\tthis.battle.dex.species.get(clientPokemon.volatiles.formechange[1]).baseSpecies : species;\r\n\r\n\t\tlet speedModifiers = [];\r\n\r\n\t\t// check for light ball, thick club, metal/quick powder\r\n\t\t// the only stat modifying items in gen 2 were light ball, thick club, metal powder\r\n\t\tif (item === 'lightball' && speciesName === 'Pikachu' && this.battle.gen !== 4) {\r\n\t\t\tif (this.battle.gen > 4) stats.atk *= 2;\r\n\t\t\tstats.spa *= 2;\r\n\t\t}\r\n\r\n\t\tif (item === 'thickclub') {\r\n\t\t\tif (speciesName === 'Marowak' || speciesName === 'Cubone') {\r\n\t\t\t\tstats.atk *= 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (speciesName === 'Ditto' && !(clientPokemon && 'transform' in clientPokemon.volatiles)) {\r\n\t\t\tif (item === 'quickpowder') {\r\n\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t}\r\n\t\t\tif (item === 'metalpowder') {\r\n\t\t\t\tif (this.battle.gen === 2) {\r\n\t\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\r\n\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstats.def *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check abilities other than Guts and Quick Feet\r\n\t\t// check items other than light ball, thick club, metal/quick powder\r\n\t\tif (this.battle.gen <= 2) {\r\n\t\t\treturn stats;\r\n\t\t}\r\n\r\n\t\tlet weather = this.battle.weather;\r\n\t\tif (this.battle.abilityActive(['Air Lock', 'Cloud Nine'])) {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'choiceband' && !clientPokemon?.volatiles['dynamax']) {\r\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\r\n\t\t}\r\n\t\tif (ability === 'purepower' || ability === 'hugepower') {\r\n\t\t\tstats.atk *= 2;\r\n\t\t}\r\n\t\tif (ability === 'hustle' || (ability === 'gorillatactics' && !clientPokemon?.volatiles['dynamax'])) {\r\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tif (this.battle.gen >= 4 && this.pokemonHasType(pokemon, 'Rock') && weather === 'sandstorm') {\r\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t\t}\r\n\t\t\tif (this.pokemonHasType(pokemon, 'Ice') && weather === 'snow') {\r\n\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\r\n\t\t\t}\r\n\t\t\tif (ability === 'sandrush' && weather === 'sandstorm') {\r\n\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t}\r\n\t\t\tif (ability === 'slushrush' && (weather === 'hail' || weather === 'snow')) {\r\n\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t}\r\n\t\t\tif (item !== 'utilityumbrella') {\r\n\t\t\t\tif (weather === 'sunnyday' || weather === 'desolateland') {\r\n\t\t\t\t\tif (ability === 'chlorophyll') {\r\n\t\t\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ability === 'solarpower') {\r\n\t\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ability === 'orichalcumpulse') {\r\n\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.3);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet allyActive = clientPokemon?.side.active;\r\n\t\t\t\t\tif (allyActive) {\r\n\t\t\t\t\t\tfor (const ally of allyActive) {\r\n\t\t\t\t\t\t\tif (!ally || ally.fainted) continue;\r\n\t\t\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\r\n\t\t\t\t\t\t\tif (allyAbility === 'Flower Gift' && (ally.getSpecies().baseSpecies === 'Cherrim' || this.battle.gen <= 4)) {\r\n\t\t\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\r\n\t\t\t\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (weather === 'raindance' || weather === 'primordialsea') {\r\n\t\t\t\t\tif (ability === 'swiftswim') {\r\n\t\t\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ability === 'defeatist' && serverPokemon.hp <= serverPokemon.maxhp / 2) {\r\n\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\r\n\t\t\tstats.spa = Math.floor(stats.spa * 0.5);\r\n\t\t}\r\n\t\tif (clientPokemon) {\r\n\t\t\tif (clientPokemon.volatiles['slowstart']) {\r\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\r\n\t\t\t\tspeedModifiers.push(0.5);\r\n\t\t\t}\r\n\t\t\tif (ability === 'unburden' && clientPokemon.volatiles['itemremoved'] && !item) {\r\n\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t}\r\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\t\tif (clientPokemon.volatiles['protosynthesis' + statName] || clientPokemon.volatiles['quarkdrive' + statName]) {\r\n\t\t\t\t\tif (statName === 'spe') {\r\n\t\t\t\t\t\tspeedModifiers.push(1.5);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstats[statName] = Math.floor(stats[statName] * 1.3);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ability === 'marvelscale' && pokemon.status) {\r\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\r\n\t\t}\r\n\t\tconst isNFE = this.battle.dex.species.get(serverPokemon.speciesForme).evos?.some(evo => {\r\n\t\t\tconst evoSpecies = this.battle.dex.species.get(evo);\r\n\t\t\treturn !evoSpecies.isNonstandard ||\r\n\t\t\t\t\tevoSpecies.isNonstandard === this.battle.dex.species.get(serverPokemon.speciesForme)?.isNonstandard ||\r\n\t\t\t\t\t// Pokemon with Hisui evolutions\r\n\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\r\n\t\t});\r\n\t\tif (item === 'eviolite' && isNFE) {\r\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\r\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t}\r\n\t\tif (ability === 'grasspelt' && this.battle.hasPseudoWeather('Grassy Terrain')) {\r\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\r\n\t\t}\r\n\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\r\n\t\t\tif (ability === 'surgesurfer') {\r\n\t\t\t\tspeedModifiers.push(2);\r\n\t\t\t}\r\n\t\t\tif (ability === 'hadronengine') {\r\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.3);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (item === 'choicespecs' && !clientPokemon?.volatiles['dynamax']) {\r\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\r\n\t\t}\r\n\t\tif (item === 'deepseatooth' && species === 'Clamperl') {\r\n\t\t\tstats.spa *= 2;\r\n\t\t}\r\n\t\tif (item === 'souldew' && this.battle.gen <= 6 && (species === 'Latios' || species === 'Latias')) {\r\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\r\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t}\r\n\t\tif (clientPokemon && (ability === 'plus' || ability === 'minus')) {\r\n\t\t\tlet allyActive = clientPokemon.side.active;\r\n\t\t\tif (allyActive.length > 1) {\r\n\t\t\t\tlet abilityName = (ability === 'plus' ? 'Plus' : 'Minus');\r\n\t\t\t\tfor (const ally of allyActive) {\r\n\t\t\t\t\tif (!ally || ally === clientPokemon || ally.fainted) continue;\r\n\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\r\n\t\t\t\t\tif (allyAbility !== 'Plus' && allyAbility !== 'Minus') continue;\r\n\t\t\t\t\tif (this.battle.gen <= 4 && allyAbility === abilityName) continue;\r\n\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (item === 'assaultvest') {\r\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\r\n\t\t}\r\n\t\tif (item === 'deepseascale' && species === 'Clamperl') {\r\n\t\t\tstats.spd *= 2;\r\n\t\t}\r\n\t\tif (item === 'choicescarf' && !clientPokemon?.volatiles['dynamax']) {\r\n\t\t\tspeedModifiers.push(1.5);\r\n\t\t}\r\n\t\tif (item === 'ironball' || speedHalvingEVItems.includes(item)) {\r\n\t\t\tspeedModifiers.push(0.5);\r\n\t\t}\r\n\t\tif (ability === 'furcoat') {\r\n\t\t\tstats.def *= 2;\r\n\t\t}\r\n\t\tif (this.battle.abilityActive('Vessel of Ruin')) {\r\n\t\t\tif (ability !== 'vesselofruin') {\r\n\t\t\t\tstats.spa = Math.floor(stats.spa * 0.75);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.battle.abilityActive('Sword of Ruin')) {\r\n\t\t\tif (ability !== 'swordofruin') {\r\n\t\t\t\tstats.def = Math.floor(stats.def * 0.75);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.battle.abilityActive('Tablets of Ruin')) {\r\n\t\t\tif (ability !== 'tabletsofruin') {\r\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.75);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.battle.abilityActive('Beads of Ruin')) {\r\n\t\t\tif (ability !== 'beadsofruin') {\r\n\t\t\t\tstats.spd = Math.floor(stats.spd * 0.75);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst sideConditions = this.battle.mySide.sideConditions;\r\n\t\tif (sideConditions['tailwind']) {\r\n\t\t\tspeedModifiers.push(2);\r\n\t\t}\r\n\t\tif (sideConditions['grasspledge']) {\r\n\t\t\tspeedModifiers.push(0.25);\r\n\t\t}\r\n\r\n\t\tlet chainedSpeedModifier = 1;\r\n\t\tfor (const modifier of speedModifiers) {\r\n\t\t\tchainedSpeedModifier *= modifier;\r\n\t\t}\r\n\t\t// Chained modifiers round down on 0.5\r\n\t\tstats.spe = stats.spe * chainedSpeedModifier;\r\n\t\tstats.spe = stats.spe % 1 > 0.5 ? Math.ceil(stats.spe) : Math.floor(stats.spe);\r\n\r\n\t\tif (pokemon.status === 'par' && ability !== 'quickfeet') {\r\n\t\t\tif (this.battle.gen > 6) {\r\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\r\n\t\t\t} else {\r\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.25);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn stats;\r\n\t}\r\n\r\n\trenderStats(clientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, short?: boolean) {\r\n\t\tconst isTransformed = clientPokemon?.volatiles.transform;\r\n\t\tif (!serverPokemon || isTransformed) {\r\n\t\t\tif (!clientPokemon) throw new Error('Must pass either clientPokemon or serverPokemon');\r\n\t\t\tlet [min, max] = this.getSpeedRange(clientPokemon);\r\n\t\t\treturn '<p><small>Spe</small> ' + min + ' to ' + max + ' <small>(before items/abilities/modifiers)</small></p>';\r\n\t\t}\r\n\t\tconst stats = serverPokemon.stats;\r\n\t\tconst modifiedStats = this.calculateModifiedStats(clientPokemon, serverPokemon);\r\n\r\n\t\tlet buf = '<p>';\r\n\r\n\t\tif (!short) {\r\n\t\t\tlet hasModifiedStat = false;\r\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\r\n\t\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\r\n\t\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\r\n\t\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\r\n\t\t\t\tbuf += '' + stats[statName];\r\n\t\t\t\tif (modifiedStats[statName] !== stats[statName]) hasModifiedStat = true;\r\n\t\t\t}\r\n\t\t\tbuf += '</p>';\r\n\r\n\t\t\tif (!hasModifiedStat) return buf;\r\n\r\n\t\t\tbuf += '<p><small>(After stat modifiers:)</small></p>';\r\n\t\t\tbuf += '<p>';\r\n\t\t}\r\n\r\n\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\r\n\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\r\n\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\r\n\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\r\n\t\t\tif (modifiedStats[statName] === stats[statName]) {\r\n\t\t\t\tbuf += '' + modifiedStats[statName];\r\n\t\t\t} else if (modifiedStats[statName] < stats[statName]) {\r\n\t\t\t\tbuf += '<strong class=\"stat-lowered\">' + modifiedStats[statName] + '</strong>';\r\n\t\t\t} else {\r\n\t\t\t\tbuf += '<strong class=\"stat-boosted\">' + modifiedStats[statName] + '</strong>';\r\n\t\t\t}\r\n\t\t}\r\n\t\tbuf += '</p>';\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tgetPPUseText(moveTrackRow: [string, number], showKnown?: boolean) {\r\n\t\tlet [moveName, ppUsed] = moveTrackRow;\r\n\t\tlet move;\r\n\t\tlet maxpp;\r\n\t\tif (moveName.charAt(0) === '*') {\r\n\t\t\t// Transformed move\r\n\t\t\tmove = this.battle.dex.moves.get(moveName.substr(1));\r\n\t\t\tmaxpp = 5;\r\n\t\t} else {\r\n\t\t\tmove = this.battle.dex.moves.get(moveName);\r\n\t\t\tmaxpp = (move.pp === 1 || move.noPPBoosts ? move.pp : move.pp * 8 / 5);\r\n\t\t\tif (this.battle.gen < 3) maxpp = Math.min(61, maxpp);\r\n\t\t}\r\n\t\tconst bullet = moveName.charAt(0) === '*' || move.isZ ? '<span style=\"color:#888\">&#8226;</span>' : '&#8226;';\r\n\t\tif (ppUsed === Infinity) {\r\n\t\t\treturn `${bullet} ${move.name} <small>(0/${maxpp})</small>`;\r\n\t\t}\r\n\t\tif (ppUsed || moveName.charAt(0) === '*') {\r\n\t\t\treturn `${bullet} ${move.name} <small>(${maxpp - ppUsed}/${maxpp})</small>`;\r\n\t\t}\r\n\t\treturn `${bullet} ${move.name} ${showKnown ? ' <small>(revealed)</small>' : ''}`;\r\n\t}\r\n\r\n\tppUsed(move: Move, pokemon: Pokemon) {\r\n\t\tfor (let [moveName, ppUsed] of pokemon.moveTrack) {\r\n\t\t\tif (moveName.charAt(0) === '*') moveName = moveName.substr(1);\r\n\t\t\tif (move.name === moveName) return ppUsed;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates possible Speed stat range of an opponent\r\n\t */\r\n\tgetSpeedRange(pokemon: Pokemon): [number, number] {\r\n\t\tconst tr = Math.trunc || Math.floor;\r\n\t\tconst species = pokemon.getSpecies();\r\n\t\tlet baseSpe = species.baseStats.spe;\r\n\t\tif (this.battle.rules['Scalemons Mod']) {\r\n\t\t\tconst bstWithoutHp = species.bst - species.baseStats.hp;\r\n\t\t\tconst scale = 600 - species.baseStats.hp;\r\n\t\t\tbaseSpe = tr(baseSpe * scale / bstWithoutHp);\r\n\t\t\tif (baseSpe < 1) baseSpe = 1;\r\n\t\t\tif (baseSpe > 255) baseSpe = 255;\r\n\t\t}\r\n\t\tlet level = pokemon.volatiles.transform?.[4] || pokemon.level;\r\n\t\tlet tier = this.battle.tier;\r\n\t\tlet gen = this.battle.gen;\r\n\t\tlet isCGT = tier.includes('Computer-Generated Teams');\r\n\t\tlet isRandomBattle = tier.includes('Random Battle') ||\r\n\t\t\t(tier.includes('Random') && tier.includes('Battle') && gen >= 6) || isCGT;\r\n\r\n\t\tlet minNature = (isRandomBattle || gen < 3) ? 1 : 0.9;\r\n\t\tlet maxNature = (isRandomBattle || gen < 3) ? 1 : 1.1;\r\n\t\tlet maxIv = (gen < 3) ? 30 : 31;\r\n\r\n\t\tlet min;\r\n\t\tlet max;\r\n\t\tif (tier.includes(\"Let's Go\")) {\r\n\t\t\tmin = tr(tr(tr(2 * baseSpe * level / 100 + 5) * minNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\r\n\t\t\tmax = tr(tr(tr((2 * baseSpe + maxIv) * level / 100 + 5) * maxNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\r\n\t\t\tif (tier.includes('No Restrictions')) max += 200;\r\n\t\t\telse if (tier.includes('Random')) max += 20;\r\n\t\t} else {\r\n\t\t\tlet maxIvEvOffset = maxIv + ((isRandomBattle && gen >= 3) ? 21 : 63);\r\n\t\t\tmax = tr(tr((2 * baseSpe + maxIvEvOffset) * level / 100 + 5) * maxNature);\r\n\t\t\tmin = isCGT ? max : tr(tr(2 * baseSpe * level / 100 + 5) * minNature);\r\n\t\t}\r\n\t\treturn [min, max];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the proper current type for moves with a variable type.\r\n\t */\r\n\tgetMoveType(move: Move, value: ModifiableValue, forMaxMove?: boolean | Move): [TypeName, 'Physical' | 'Special' | 'Status'] {\r\n\t\tconst pokemon = value.pokemon;\r\n\t\tconst serverPokemon = value.serverPokemon;\r\n\r\n\t\tlet moveType = move.type;\r\n\t\tlet category = move.category;\r\n\t\tif (category === 'Status' && forMaxMove) return ['Normal', 'Status']; // Max Guard\r\n\t\t// can happen in obscure situations\r\n\t\tif (!pokemon) return [moveType, category];\r\n\r\n\t\tlet pokemonTypes = pokemon.getTypeList(serverPokemon);\r\n\t\tvalue.reset();\r\n\t\tif (move.id === 'revelationdance') {\r\n\t\t\tmoveType = pokemonTypes[0];\r\n\t\t}\r\n\t\t// Moves that require an item to change their type.\r\n\t\tlet item = Dex.items.get(value.itemName);\r\n\t\tif (move.id === 'multiattack' && item.onMemory) {\r\n\t\t\tif (value.itemModify(0)) moveType = item.onMemory;\r\n\t\t}\r\n\t\tif (move.id === 'judgment' && item.onPlate && !item.zMoveType) {\r\n\t\t\tif (value.itemModify(0)) moveType = item.onPlate;\r\n\t\t}\r\n\t\tif (move.id === 'technoblast' && item.onDrive) {\r\n\t\t\tif (value.itemModify(0)) moveType = item.onDrive;\r\n\t\t}\r\n\t\tif (move.id === 'naturalgift' && item.naturalGift) {\r\n\t\t\tif (value.itemModify(0)) moveType = item.naturalGift.type;\r\n\t\t}\r\n\t\t// Weather and pseudo-weather type changes.\r\n\t\tif (move.id === 'weatherball' && value.weatherModify(0)) {\r\n\t\t\tswitch (this.battle.weather) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (item.id === 'utilityumbrella') break;\r\n\t\t\t\tmoveType = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\t\tif (item.id === 'utilityumbrella') break;\r\n\t\t\t\tmoveType = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sandstorm':\r\n\t\t\t\tmoveType = 'Rock';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snow':\r\n\t\t\t\tmoveType = 'Ice';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\r\n\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\r\n\t\t\t\tmoveType = 'Electric';\r\n\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\r\n\t\t\t\tmoveType = 'Grass';\r\n\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\r\n\t\t\t\tmoveType = 'Fairy';\r\n\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\r\n\t\t\t\tmoveType = 'Psychic';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.id === 'terablast' && pokemon.terastallized) {\r\n\t\t\tmoveType = pokemon.terastallized as TypeName;\r\n\t\t}\r\n\r\n\t\t// Aura Wheel as Morpeko-Hangry changes the type to Dark\r\n\t\tif (move.id === 'aurawheel' && pokemon.getSpeciesForme() === 'Morpeko-Hangry') {\r\n\t\t\tmoveType = 'Dark';\r\n\t\t}\r\n\t\t// Raging Bull's type depends on the Tauros forme\r\n\t\tif (move.id === 'ragingbull') {\r\n\t\t\tswitch (pokemon.getSpeciesForme()) {\r\n\t\t\tcase 'Tauros-Paldea-Combat':\r\n\t\t\t\tmoveType = 'Fighting';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tauros-Paldea-Blaze':\r\n\t\t\t\tmoveType = 'Fire';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Tauros-Paldea-Aqua':\r\n\t\t\t\tmoveType = 'Water';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Other abilities that change the move type.\r\n\t\tconst noTypeOverride = [\r\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terablast', 'terrainpulse', 'weatherball',\r\n\t\t];\r\n\t\tconst allowTypeOverride = !noTypeOverride.includes(move.id) && (move.id !== 'terablast' || !pokemon.terastallized);\r\n\t\tif (allowTypeOverride) {\r\n\t\t\tif (this.battle.rules['Revelationmons Mod']) {\r\n\t\t\t\tconst [types] = pokemon.getTypes(serverPokemon);\r\n\t\t\t\tfor (let i = 0; i < types.length; i++) {\r\n\t\t\t\t\tif (serverPokemon.moves[i] && move.id === toID(serverPokemon.moves[i])) {\r\n\t\t\t\t\t\tmoveType = types[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (category !== 'Status' && !move.isZ && !move.id.startsWith('hiddenpower')) {\r\n\t\t\t\tif (moveType === 'Normal') {\r\n\t\t\t\t\tif (value.abilityModify(0, 'Aerilate')) moveType = 'Flying';\r\n\t\t\t\t\tif (value.abilityModify(0, 'Galvanize')) moveType = 'Electric';\r\n\t\t\t\t\tif (value.abilityModify(0, 'Pixilate')) moveType = 'Fairy';\r\n\t\t\t\t\tif (value.abilityModify(0, 'Refrigerate')) moveType = 'Ice';\r\n\t\t\t\t}\r\n\t\t\t\tif (value.abilityModify(0, 'Normalize')) moveType = 'Normal';\r\n\t\t\t}\r\n\r\n\t\t\t// There aren't any max moves with the sound flag, but if there were, Liquid Voice would make them water type\r\n\t\t\tconst isSound = !!(\r\n\t\t\t\tforMaxMove ?\r\n\t\t\t\tthis.getMaxMoveFromType(moveType, forMaxMove !== true && forMaxMove || undefined) : move\r\n\t\t\t).flags['sound'];\r\n\t\t\tif (isSound && value.abilityModify(0, 'Liquid Voice')) {\r\n\t\t\t\tmoveType = 'Water';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.battle.gen <= 3 && category !== 'Status') {\r\n\t\t\tcategory = Dex.getGen3Category(moveType);\r\n\t\t}\r\n\t\treturn [moveType, category];\r\n\t}\r\n\r\n\t// Gets the current accuracy for a move.\r\n\tgetMoveAccuracy(move: Move, value: ModifiableValue, target?: Pokemon) {\r\n\t\tvalue.reset(move.accuracy === true ? 0 : move.accuracy, true);\r\n\r\n\t\tlet pokemon = value.pokemon!;\r\n\t\t// Sure-hit accuracy\r\n\t\tif (move.id === 'toxic' && this.battle.gen >= 6 && this.pokemonHasType(pokemon, 'Poison')) {\r\n\t\t\tvalue.set(0, \"Poison type\");\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif (move.id === 'blizzard' && this.battle.gen >= 4) {\r\n\t\t\tvalue.weatherModify(0, 'Hail');\r\n\t\t\tvalue.weatherModify(0, 'Snow');\r\n\t\t}\r\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\r\n\t\t\tvalue.weatherModify(0, 'Rain Dance');\r\n\t\t\tvalue.weatherModify(0, 'Primordial Sea');\r\n\t\t}\r\n\t\tvalue.abilityModify(0, 'No Guard');\r\n\t\tif (!value.value) return value;\r\n\r\n\t\t// OHKO moves don't use standard accuracy / evasion modifiers\r\n\t\tif (move.ohko) {\r\n\t\t\tif (this.battle.gen === 1) {\r\n\t\t\t\tvalue.set(value.value, `fails if target's Speed is higher`);\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t\tif (move.id === 'sheercold' && this.battle.gen >= 7 && !this.pokemonHasType(pokemon, 'Ice')) {\r\n\t\t\t\tvalue.set(20, 'not Ice-type');\r\n\t\t\t}\r\n\t\t\tif (target) {\r\n\t\t\t\tif (pokemon.level < target.level) {\r\n\t\t\t\t\tvalue.reset(0);\r\n\t\t\t\t\tvalue.set(0, \"FAILS: target's level is higher\");\r\n\t\t\t\t} else if (pokemon.level > target.level) {\r\n\t\t\t\t\tvalue.set(value.value + pokemon.level - target.level, \"+1% per level above target\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.level < 100) value.set(value.value, \"fails if target's level is higher\");\r\n\t\t\t\tif (pokemon.level > 1) value.set(value.value, \"+1% per level above target\");\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Accuracy modifiers start\r\n\r\n\t\tlet accuracyModifiers = [];\r\n\t\tif (this.battle.hasPseudoWeather('Gravity')) {\r\n\t\t\taccuracyModifiers.push(6840);\r\n\t\t\tvalue.modify(5 / 3, \"Gravity\");\r\n\t\t}\r\n\r\n\t\tfor (const active of pokemon.side.active) {\r\n\t\t\tif (!active || active.fainted) continue;\r\n\t\t\tconst ability = this.getAllyAbility(active);\r\n\t\t\tif (ability === 'Victory Star') {\r\n\t\t\t\taccuracyModifiers.push(4506);\r\n\t\t\t\tvalue.modify(1.1, \"Victory Star\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value.tryAbility('Hustle') && move.category === 'Physical') {\r\n\t\t\taccuracyModifiers.push(3277);\r\n\t\t\tvalue.abilityModify(0.8, \"Hustle\");\r\n\t\t} else if (value.tryAbility('Compound Eyes')) {\r\n\t\t\taccuracyModifiers.push(5325);\r\n\t\t\tvalue.abilityModify(1.3, \"Compound Eyes\");\r\n\t\t}\r\n\r\n\t\tif (value.tryItem('Wide Lens')) {\r\n\t\t\taccuracyModifiers.push(4505);\r\n\t\t\tvalue.itemModify(1.1, \"Wide Lens\");\r\n\t\t}\r\n\r\n\t\t// Chaining modifiers\r\n\t\tlet chain = 4096;\r\n\t\tfor (const mod of accuracyModifiers) {\r\n\t\t\tif (mod !== 4096) {\r\n\t\t\t\tchain = (chain * mod + 2048) >> 12;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Applying modifiers\r\n\t\tvalue.set(move.accuracy as number);\r\n\r\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\r\n\t\t\tif (value.tryWeather('Sunny Day')) value.set(50, 'Sunny Day');\r\n\t\t\tif (value.tryWeather('Desolate Land')) value.set(50, 'Desolate Land');\r\n\t\t}\r\n\r\n\t\t// Chained modifiers round down on 0.5\r\n\t\tlet accuracyAfterChain = (value.value * chain) / 4096;\r\n\t\taccuracyAfterChain = accuracyAfterChain % 1 > 0.5 ? Math.ceil(accuracyAfterChain) : Math.floor(accuracyAfterChain);\r\n\t\tvalue.set(accuracyAfterChain);\r\n\r\n\t\t// Unlike for Atk, Def, etc. accuracy and evasion boosts are applied after modifiers\r\n\t\tif (pokemon?.boosts.accuracy) {\r\n\t\t\tif (pokemon.boosts.accuracy > 0) {\r\n\t\t\t\tvalue.set(Math.floor(value.value * (pokemon.boosts.accuracy + 3) / 3));\r\n\t\t\t} else {\r\n\t\t\t\tvalue.set(Math.floor(value.value * 3 / (3 - pokemon.boosts.accuracy)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 1/256 glitch\r\n\t\tif (this.battle.gen === 1 && !toID(this.battle.tier).includes('stadium')) {\r\n\t\t\tvalue.set((Math.floor(value.value * 255 / 100) / 256) * 100);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Gets the proper current base power for moves which have a variable base power.\r\n\t// Takes into account the target for some moves.\r\n\t// If it is unsure of the actual base power, it gives an estimate.\r\n\tgetMoveBasePower(move: Move, moveType: TypeName, value: ModifiableValue, target: Pokemon | null = null) {\r\n\t\tconst pokemon = value.pokemon!;\r\n\t\tconst serverPokemon = value.serverPokemon;\r\n\r\n\t\t// apply modifiers for moves that depend on the actual stats\r\n\t\tconst modifiedStats = this.calculateModifiedStats(pokemon, serverPokemon);\r\n\r\n\t\tvalue.reset(move.basePower);\r\n\r\n\t\tif (move.id === 'acrobatics') {\r\n\t\t\tif (!serverPokemon.item) {\r\n\t\t\t\tvalue.modify(2, \"Acrobatics + no item\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (['crushgrip', 'wringout'].includes(move.id) && target) {\r\n\t\t\tvalue.set(\r\n\t\t\t\tMath.floor(Math.floor((120 * (100 * Math.floor(target.hp * 4096 / target.maxhp)) + 2048 - 1) / 4096) / 100) || 1,\r\n\t\t\t\t'approximate'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (move.id === 'brine' && target && target.hp * 2 <= target.maxhp) {\r\n\t\t\tvalue.modify(2, 'Brine + target below half HP');\r\n\t\t}\r\n\t\tif (move.id === 'eruption' || move.id === 'waterspout' || move.id === 'dragonenergy') {\r\n\t\t\tvalue.set(Math.floor(150 * pokemon.hp / pokemon.maxhp) || 1);\r\n\t\t}\r\n\t\tif (move.id === 'facade' && !['', 'slp', 'frz'].includes(pokemon.status)) {\r\n\t\t\tvalue.modify(2, 'Facade + status');\r\n\t\t}\r\n\t\tif (move.id === 'flail' || move.id === 'reversal') {\r\n\t\t\tlet multiplier;\r\n\t\t\tlet ratios;\r\n\t\t\tif (this.battle.gen > 4) {\r\n\t\t\t\tmultiplier = 48;\r\n\t\t\t\tratios = [2, 5, 10, 17, 33];\r\n\t\t\t} else {\r\n\t\t\t\tmultiplier = 64;\r\n\t\t\t\tratios = [2, 6, 13, 22, 43];\r\n\t\t\t}\r\n\t\t\tlet ratio = pokemon.hp * multiplier / pokemon.maxhp;\r\n\t\t\tlet basePower;\r\n\t\t\tif (ratio < ratios[0]) basePower = 200;\r\n\t\t\telse if (ratio < ratios[1]) basePower = 150;\r\n\t\t\telse if (ratio < ratios[2]) basePower = 100;\r\n\t\t\telse if (ratio < ratios[3]) basePower = 80;\r\n\t\t\telse if (ratio < ratios[4]) basePower = 40;\r\n\t\t\telse basePower = 20;\r\n\t\t\tvalue.set(basePower);\r\n\t\t}\r\n\t\tif (['hex', 'infernalparade'].includes(move.id) && target?.status) {\r\n\t\t\tvalue.modify(2, move.name + ' + status');\r\n\t\t}\r\n\t\tif (move.id === 'lastrespects') {\r\n\t\t\tvalue.set(Math.min(50 + 50 * pokemon.side.faintCounter));\r\n\t\t}\r\n\t\tif (move.id === 'punishment' && target) {\r\n\t\t\tlet boostCount = 0;\r\n\t\t\tfor (const boost of Object.values(target.boosts)) {\r\n\t\t\t\tif (boost > 0) boostCount += boost;\r\n\t\t\t}\r\n\t\t\tvalue.set(Math.min(60 + 20 * boostCount, 200));\r\n\t\t}\r\n\t\tif (move.id === 'smellingsalts' && target) {\r\n\t\t\tif (target.status === 'par') {\r\n\t\t\t\tvalue.modify(2, 'Smelling Salts + Paralysis');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (['storedpower', 'powertrip'].includes(move.id) && target) {\r\n\t\t\tlet boostCount = 0;\r\n\t\t\tfor (const boost of Object.values(pokemon.boosts)) {\r\n\t\t\t\tif (boost > 0) boostCount += boost;\r\n\t\t\t}\r\n\t\t\tvalue.set(20 + 20 * boostCount);\r\n\t\t}\r\n\t\tif (move.id === 'trumpcard') {\r\n\t\t\tconst ppLeft = 5 - this.ppUsed(move, pokemon);\r\n\t\t\tlet basePower = 40;\r\n\t\t\tif (ppLeft === 1) basePower = 200;\r\n\t\t\telse if (ppLeft === 2) basePower = 80;\r\n\t\t\telse if (ppLeft === 3) basePower = 60;\r\n\t\t\telse if (ppLeft === 4) basePower = 50;\r\n\t\t\tvalue.set(basePower);\r\n\t\t}\r\n\t\tif (move.id === 'magnitude') {\r\n\t\t\tvalue.setRange(10, 150);\r\n\t\t}\r\n\t\tif (['venoshock', 'barbbarrage'].includes(move.id) && target) {\r\n\t\t\tif (['psn', 'tox'].includes(target.status)) {\r\n\t\t\t\tvalue.modify(2, move.name + ' + Poison');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.id === 'wakeupslap' && target) {\r\n\t\t\tif (target.status === 'slp') {\r\n\t\t\t\tvalue.modify(2, 'Wake-Up Slap + Sleep');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.id === 'weatherball') {\r\n\t\t\tif (this.battle.weather !== 'deltastream') {\r\n\t\t\t\tvalue.weatherModify(2);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.id === 'hydrosteam') {\r\n\t\t\tvalue.weatherModify(1.5, 'Sunny Day');\r\n\t\t}\r\n\t\tif (move.id === 'psyblade' && this.battle.hasPseudoWeather('Electric Terrain')) {\r\n\t\t\tvalue.modify(1.5, 'Electric Terrain');\r\n\t\t}\r\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\r\n\t\t\tif (\r\n\t\t\t\tthis.battle.hasPseudoWeather('Electric Terrain') ||\r\n\t\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') ||\r\n\t\t\t\tthis.battle.hasPseudoWeather('Misty Terrain') ||\r\n\t\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain')\r\n\t\t\t) {\r\n\t\t\t\tvalue.modify(2, 'Terrain Pulse boost');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (\r\n\t\t\tmove.id === 'watershuriken' && pokemon.getSpeciesForme() === 'Greninja-Ash' && pokemon.ability === 'Battle Bond'\r\n\t\t) {\r\n\t\t\tvalue.set(20, 'Battle Bond');\r\n\t\t}\r\n\t\t// Moves that check opponent speed\r\n\t\tif (move.id === 'electroball' && target) {\r\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\r\n\t\t\tlet minRatio = (modifiedStats.spe / maxSpe);\r\n\t\t\tlet maxRatio = (modifiedStats.spe / minSpe);\r\n\t\t\tlet min;\r\n\t\t\tlet max;\r\n\r\n\t\t\tif (minRatio >= 4) min = 150;\r\n\t\t\telse if (minRatio >= 3) min = 120;\r\n\t\t\telse if (minRatio >= 2) min = 80;\r\n\t\t\telse if (minRatio >= 1) min = 60;\r\n\t\t\telse min = 40;\r\n\r\n\t\t\tif (maxRatio >= 4) max = 150;\r\n\t\t\telse if (maxRatio >= 3) max = 120;\r\n\t\t\telse if (maxRatio >= 2) max = 80;\r\n\t\t\telse if (maxRatio >= 1) max = 60;\r\n\t\t\telse max = 40;\r\n\r\n\t\t\tvalue.setRange(min, max);\r\n\t\t}\r\n\t\tif (move.id === 'gyroball' && target) {\r\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\r\n\t\t\tlet min = (Math.floor(25 * minSpe / modifiedStats.spe) || 1);\r\n\t\t\tif (min > 150) min = 150;\r\n\t\t\tlet max = (Math.floor(25 * maxSpe / modifiedStats.spe) || 1);\r\n\t\t\tif (max > 150) max = 150;\r\n\t\t\tvalue.setRange(min, max);\r\n\t\t}\r\n\t\t// Moves which have base power changed due to items\r\n\t\tif (serverPokemon.item) {\r\n\t\t\tlet item = Dex.items.get(serverPokemon.item);\r\n\t\t\tif (move.id === 'fling' && item.fling) {\r\n\t\t\t\tvalue.itemModify(item.fling.basePower);\r\n\t\t\t}\r\n\t\t\tif (move.id === 'naturalgift') {\r\n\t\t\t\tvalue.itemModify(item.naturalGift.basePower);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Moves which have base power changed according to weight\r\n\t\tif (['lowkick', 'grassknot', 'heavyslam', 'heatcrash'].includes(move.id)) {\r\n\t\t\tlet isGKLK = ['lowkick', 'grassknot'].includes(move.id);\r\n\t\t\tif (target) {\r\n\t\t\t\tlet targetWeight = target.getWeightKg();\r\n\t\t\t\tlet pokemonWeight = pokemon.getWeightKg(serverPokemon);\r\n\t\t\t\tlet basePower;\r\n\t\t\t\tif (isGKLK) {\r\n\t\t\t\t\tbasePower = 20;\r\n\t\t\t\t\tif (targetWeight >= 200) basePower = 120;\r\n\t\t\t\t\telse if (targetWeight >= 100) basePower = 100;\r\n\t\t\t\t\telse if (targetWeight >= 50) basePower = 80;\r\n\t\t\t\t\telse if (targetWeight >= 25) basePower = 60;\r\n\t\t\t\t\telse if (targetWeight >= 10) basePower = 40;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbasePower = 40;\r\n\t\t\t\t\tif (pokemonWeight >= targetWeight * 5) basePower = 120;\r\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 4) basePower = 100;\r\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 3) basePower = 80;\r\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 2) basePower = 60;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['dynamax']) {\r\n\t\t\t\t\tvalue.set(0, 'blocked by target\\'s Dynamax');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.set(basePower);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvalue.setRange(isGKLK ? 20 : 40, 120);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Base power based on times hit\r\n\t\tif (move.id === 'ragefist') {\r\n\t\t\tvalue.set(Math.min(350, 50 + 50 * pokemon.timesAttacked),\r\n\t\t\t\tpokemon.timesAttacked > 0\r\n\t\t\t\t\t? `Hit ${pokemon.timesAttacked} time${pokemon.timesAttacked > 1 ? 's' : ''}`\r\n\t\t\t\t\t: undefined);\r\n\t\t}\r\n\t\tif (!value.value) return value;\r\n\r\n\t\t// Other ability boosts\r\n\t\tif (pokemon.status === 'brn' && move.category === 'Special') {\r\n\t\t\tvalue.abilityModify(1.5, \"Flare Boost\");\r\n\t\t}\r\n\t\tif (move.flags['punch']) {\r\n\t\t\tvalue.abilityModify(1.2, 'Iron Fist');\r\n\t\t}\r\n\t\tif (move.flags['pulse']) {\r\n\t\t\tvalue.abilityModify(1.5, \"Mega Launcher\");\r\n\t\t}\r\n\t\tif (move.flags['bite']) {\r\n\t\t\tvalue.abilityModify(1.5, \"Strong Jaw\");\r\n\t\t}\r\n\t\tif (value.value <= 60) {\r\n\t\t\tvalue.abilityModify(1.5, \"Technician\");\r\n\t\t}\r\n\t\tif (['psn', 'tox'].includes(pokemon.status) && move.category === 'Physical') {\r\n\t\t\tvalue.abilityModify(1.5, \"Toxic Boost\");\r\n\t\t}\r\n\t\tif (this.battle.gen > 2 && serverPokemon.status === 'brn' && move.id !== 'facade' && move.category === 'Physical') {\r\n\t\t\tif (!value.tryAbility(\"Guts\")) value.modify(0.5, 'Burn');\r\n\t\t}\r\n\t\tif (['Rock', 'Ground', 'Steel'].includes(moveType) && this.battle.weather === 'sandstorm') {\r\n\t\t\tif (value.tryAbility(\"Sand Force\")) value.weatherModify(1.3, \"Sandstorm\", \"Sand Force\");\r\n\t\t}\r\n\t\tif (move.secondaries) {\r\n\t\t\tvalue.abilityModify(1.3, \"Sheer Force\");\r\n\t\t}\r\n\t\tif (move.flags['contact']) {\r\n\t\t\tvalue.abilityModify(1.3, \"Tough Claws\");\r\n\t\t}\r\n\t\tif (move.flags['sound']) {\r\n\t\t\tvalue.abilityModify(1.3, \"Punk Rock\");\r\n\t\t}\r\n\t\tif (move.flags['slicing']) {\r\n\t\t\tvalue.abilityModify(1.5, \"Sharpness\");\r\n\t\t}\r\n\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\r\n\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\r\n\t\t\t\tvalue.abilityModify(1 + 0.1 * i, \"Supreme Overlord\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (target) {\r\n\t\t\tif ([\"MF\", \"FM\"].includes(pokemon.gender + target.gender)) {\r\n\t\t\t\tvalue.abilityModify(0.75, \"Rivalry\");\r\n\t\t\t} else if ([\"MM\", \"FF\"].includes(pokemon.gender + target.gender)) {\r\n\t\t\t\tvalue.abilityModify(1.25, \"Rivalry\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst noTypeOverride = [\r\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t];\r\n\t\tconst allowTypeOverride = !noTypeOverride.includes(move.id) && (move.id !== 'terablast' || !pokemon.terastallized);\r\n\t\tif (\r\n\t\t\tmove.category !== 'Status' && allowTypeOverride && !move.isZ && !move.isMax &&\r\n\t\t\t!move.id.startsWith('hiddenpower')\r\n\t\t) {\r\n\t\t\tif (move.type === 'Normal') {\r\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Aerilate\");\r\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Galvanize\");\r\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Pixilate\");\r\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Refrigerate\");\r\n\t\t\t}\r\n\t\t\tif (this.battle.gen > 6) {\r\n\t\t\t\tvalue.abilityModify(1.2, \"Normalize\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\tvalue.abilityModify(1.2, 'Reckless');\r\n\t\t}\r\n\r\n\t\tif (move.category !== 'Status') {\r\n\t\t\tlet auraBoosted = '';\r\n\t\t\tlet auraBroken = false;\r\n\t\t\tfor (const ally of pokemon.side.active) {\r\n\t\t\t\tif (!ally || ally.fainted) continue;\r\n\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\r\n\t\t\t\tif (moveType === 'Fairy' && allyAbility === 'Fairy Aura') {\r\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\r\n\t\t\t\t} else if (moveType === 'Dark' && allyAbility === 'Dark Aura') {\r\n\t\t\t\t\tauraBoosted = 'Dark Aura';\r\n\t\t\t\t} else if (allyAbility === 'Aura Break') {\r\n\t\t\t\t\tauraBroken = true;\r\n\t\t\t\t} else if (allyAbility === 'Battery' && ally !== pokemon && move.category === 'Special') {\r\n\t\t\t\t\tvalue.modify(1.3, 'Battery');\r\n\t\t\t\t} else if (allyAbility === 'Power Spot' && ally !== pokemon) {\r\n\t\t\t\t\tvalue.modify(1.3, 'Power Spot');\r\n\t\t\t\t} else if (allyAbility === 'Steely Spirit' && moveType === 'Steel') {\r\n\t\t\t\t\tvalue.modify(1.5, 'Steely Spirit');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const foe of pokemon.side.foe.active) {\r\n\t\t\t\tif (!foe || foe.fainted) continue;\r\n\t\t\t\tif (foe.ability === 'Fairy Aura' && moveType === 'Fairy') {\r\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\r\n\t\t\t\t} else if (foe.ability === 'Dark Aura' && moveType === 'Dark') {\r\n\t\t\t\t\tauraBoosted = 'Dark Aura';\r\n\t\t\t\t} else if (foe.ability === 'Aura Break') {\r\n\t\t\t\t\tauraBroken = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (auraBoosted) {\r\n\t\t\t\tif (auraBroken) {\r\n\t\t\t\t\tvalue.modify(0.75, auraBoosted + ' + Aura Break');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.modify(1.33, auraBoosted);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Terrain\r\n\t\tif ((this.battle.hasPseudoWeather('Electric Terrain') && moveType === 'Electric') ||\r\n\t\t\t(this.battle.hasPseudoWeather('Grassy Terrain') && moveType === 'Grass') ||\r\n\t\t\t(this.battle.hasPseudoWeather('Psychic Terrain') && moveType === 'Psychic')) {\r\n\t\t\tif (pokemon.isGrounded(serverPokemon)) {\r\n\t\t\t\tvalue.modify(this.battle.gen > 7 ? 1.3 : 1.5, 'Terrain boost');\r\n\t\t\t}\r\n\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain') && moveType === 'Dragon') {\r\n\t\t\tif (target ? target.isGrounded() : true) {\r\n\t\t\t\tvalue.modify(0.5, 'Misty Terrain + grounded target');\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') && ['earthquake', 'bulldoze', 'magnitude'].includes(move.id)\r\n\t\t) {\r\n\t\t\tif (target ? target.isGrounded() : true) {\r\n\t\t\t\tvalue.modify(0.5, 'Grassy Terrain + grounded target');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (\r\n\t\t\tmove.id === 'expandingforce' &&\r\n\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain') &&\r\n\t\t\tpokemon.isGrounded(serverPokemon)\r\n\t\t) {\r\n\t\t\tvalue.modify(1.5, 'Expanding Force + Psychic Terrain boost');\r\n\t\t}\r\n\t\tif (move.id === 'mistyexplosion' && this.battle.hasPseudoWeather('Misty Terrain')) {\r\n\t\t\tvalue.modify(1.5, 'Misty Explosion + Misty Terrain boost');\r\n\t\t}\r\n\t\tif (move.id === 'risingvoltage' && this.battle.hasPseudoWeather('Electric Terrain') && target?.isGrounded()) {\r\n\t\t\tvalue.modify(2, 'Rising Voltage + Electric Terrain boost');\r\n\t\t}\r\n\t\tif (\r\n\t\t\tmove.id === 'steelroller' &&\r\n\t\t\t!this.battle.hasPseudoWeather('Electric Terrain') &&\r\n\t\t\t!this.battle.hasPseudoWeather('Grassy Terrain') &&\r\n\t\t\t!this.battle.hasPseudoWeather('Misty Terrain') &&\r\n\t\t\t!this.battle.hasPseudoWeather('Psychic Terrain')\r\n\t\t) {\r\n\t\t\tvalue.set(0, 'no Terrain');\r\n\t\t}\r\n\r\n\t\t// Item\r\n\t\tvalue = this.getItemBoost(move, value, moveType);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic incenseTypes: {[itemName: string]: TypeName} = {\r\n\t\t'Odd Incense': 'Psychic',\r\n\t\t'Rock Incense': 'Rock',\r\n\t\t'Rose Incense': 'Grass',\r\n\t\t'Sea Incense': 'Water',\r\n\t\t'Wave Incense': 'Water',\r\n\t};\r\n\tstatic itemTypes: {[itemName: string]: TypeName} = {\r\n\t\t'Black Belt': 'Fighting',\r\n\t\t'Black Glasses': 'Dark',\r\n\t\t'Charcoal': 'Fire',\r\n\t\t'Dragon Fang': 'Dragon',\r\n\t\t'Hard Stone': 'Rock',\r\n\t\t'Magnet': 'Electric',\r\n\t\t'Metal Coat': 'Steel',\r\n\t\t'Miracle Seed': 'Grass',\r\n\t\t'Mystic Water': 'Water',\r\n\t\t'Never-Melt Ice': 'Ice',\r\n\t\t'Poison Barb': 'Poison',\r\n\t\t'Sharp Beak': 'Flying',\r\n\t\t'Silk Scarf': 'Normal',\r\n\t\t'Silver Powder': 'Bug',\r\n\t\t'Soft Sand': 'Ground',\r\n\t\t'Spell Tag': 'Ghost',\r\n\t\t'Twisted Spoon': 'Psychic',\r\n\t};\r\n\tstatic orbUsers: {[speciesForme: string]: string[]} = {\r\n\t\t'Latias': ['Soul Dew'],\r\n\t\t'Latios': ['Soul Dew'],\r\n\t\t'Dialga': ['Adamant Crystal', 'Adamant Orb'],\r\n\t\t'Palkia': ['Lustrous Globe', 'Lustrous Orb'],\r\n\t\t'Giratina': ['Griseous Core', 'Griseous Orb'],\r\n\t\t'Venomicon': ['Vile Vial'],\r\n\t};\r\n\tstatic orbTypes: {[itemName: string]: TypeName[]} = {\r\n\t\t'Soul Dew': ['Psychic', 'Dragon'],\r\n\t\t'Adamant Crystal': ['Steel', 'Dragon'],\r\n\t\t'Adamant Orb': ['Steel', 'Dragon'],\r\n\t\t'Lustrous Globe': ['Water', 'Dragon'],\r\n\t\t'Lustrous Orb': ['Water', 'Dragon'],\r\n\t\t'Griseous Core': ['Ghost', 'Dragon'],\r\n\t\t'Griseous Orb': ['Ghost', 'Dragon'],\r\n\t\t'Vile Vial': ['Poison', 'Flying'],\r\n\t};\r\n\tstatic noGemMoves = [\r\n\t\t'Fire Pledge',\r\n\t\t'Fling',\r\n\t\t'Grass Pledge',\r\n\t\t'Struggle',\r\n\t\t'Water Pledge',\r\n\t];\r\n\tgetItemBoost(move: Move, value: ModifiableValue, moveType: TypeName) {\r\n\t\tlet item = this.battle.dex.items.get(value.serverPokemon.item);\r\n\t\tlet itemName = item.name;\r\n\t\tlet moveName = move.name;\r\n\t\tlet species = this.battle.dex.species.get(value.serverPokemon.speciesForme);\r\n\t\tlet isTransform = value.pokemon.volatiles.transform;\r\n\t\tlet speciesName = isTransform && value.pokemon.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\r\n\t\t\tthis.battle.dex.species.get(value.pokemon.volatiles.formechange[1]).baseSpecies : species.baseSpecies;\r\n\r\n\t\t// Plates\r\n\t\tif (item.onPlate === moveType && !item.zMove) {\r\n\t\t\tvalue.itemModify(1.2);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Incenses\r\n\t\tif (BattleTooltips.incenseTypes[item.name] === moveType) {\r\n\t\t\tvalue.itemModify(1.2);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Type-enhancing items\r\n\t\tif (BattleTooltips.itemTypes[item.name] === moveType) {\r\n\t\t\tvalue.itemModify(this.battle.gen < 4 ? 1.1 : 1.2);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Light ball is a base power modifier in gen 4 only\r\n\t\tif (item.name === 'Light Ball' && this.battle.gen === 4 && speciesName === 'Pikachu') {\r\n\t\t\tvalue.itemModify(2);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Pokemon-specific items\r\n\t\tif (item.name === 'Soul Dew' && this.battle.gen < 7) return value;\r\n\t\tif (BattleTooltips.orbUsers[speciesName]?.includes(item.name) &&\r\n\t\t\tBattleTooltips.orbTypes[item.name]?.includes(moveType)) {\r\n\t\t\tvalue.itemModify(1.2);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Gems\r\n\t\tif (BattleTooltips.noGemMoves.includes(moveName)) return value;\r\n\t\tif (itemName === moveType + ' Gem') {\r\n\t\t\tvalue.itemModify(this.battle.gen < 6 ? 1.5 : 1.3);\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif (itemName === 'Punching Glove' && move.flags['punch']) {\r\n\t\t\tvalue.itemModify(1.1);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\tgetPokemonTypes(pokemon: Pokemon | ServerPokemon, preterastallized = false): ReadonlyArray<TypeName> {\r\n\t\tif (!(pokemon as Pokemon).getTypes) {\r\n\t\t\treturn this.battle.dex.species.get(pokemon.speciesForme).types;\r\n\t\t}\r\n\r\n\t\treturn (pokemon as Pokemon).getTypeList(undefined, preterastallized);\r\n\t}\r\n\tpokemonHasType(pokemon: Pokemon | ServerPokemon, type: TypeName, types?: ReadonlyArray<TypeName>) {\r\n\t\tif (!types) types = this.getPokemonTypes(pokemon);\r\n\t\tfor (const curType of types) {\r\n\t\t\tif (curType === type) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetAllyAbility(ally: Pokemon) {\r\n\t\t// this will only be available if the ability announced itself in some way\r\n\t\tlet allyAbility = Dex.abilities.get(ally.ability).name;\r\n\t\t// otherwise fall back on the original set data sent from the server\r\n\t\tif (!allyAbility) {\r\n\t\t\tif (this.battle.myAllyPokemon) { // multi battle ally\r\n\t\t\t\tallyAbility = Dex.abilities.get(this.battle.myAllyPokemon[ally.slot].ability).name;\r\n\t\t\t} else if (this.battle.myPokemon) {\r\n\t\t\t\tallyAbility = Dex.abilities.get(this.battle.myPokemon[ally.slot].ability).name;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn allyAbility;\r\n\t}\r\n\tgetPokemonAbilityData(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon | null | undefined) {\r\n\t\tconst abilityData: {ability: string, baseAbility: string, possibilities: string[]} = {\r\n\t\t\tability: '', baseAbility: '', possibilities: [],\r\n\t\t};\r\n\t\tif (clientPokemon) {\r\n\t\t\tif (clientPokemon.ability) {\r\n\t\t\t\tabilityData.ability = clientPokemon.ability || clientPokemon.baseAbility;\r\n\t\t\t\tif (clientPokemon.baseAbility) {\r\n\t\t\t\t\tabilityData.baseAbility = clientPokemon.baseAbility;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst speciesForme = clientPokemon.getSpeciesForme() || serverPokemon?.speciesForme || '';\r\n\t\t\t\tconst species = this.battle.dex.species.get(speciesForme);\r\n\t\t\t\tif (species.exists && species.abilities) {\r\n\t\t\t\t\tabilityData.possibilities = species.abilities;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tabilityData.possibilities = [species.abilities['0']];\r\n\t\t\t\t\tif (species.abilities['1']) abilityData.possibilities.push(species.abilities['1']);\r\n\t\t\t\t\tif (species.abilities['H']) abilityData.possibilities.push(species.abilities['H']);\r\n\t\t\t\t\tif (species.abilities['S']) abilityData.possibilities.push(species.abilities['S']);\r\n\t\t\t\t\t*/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (serverPokemon) {\r\n\t\t\tif (!abilityData.ability) abilityData.ability = serverPokemon.ability || serverPokemon.baseAbility;\r\n\t\t\tif (!abilityData.baseAbility && serverPokemon.baseAbility) {\r\n\t\t\t\tabilityData.baseAbility = serverPokemon.baseAbility;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn abilityData;\r\n\t}\r\n\tgetPokemonAbilityText(\r\n\t\tclientPokemon: Pokemon | null,\r\n\t\tserverPokemon: ServerPokemon | null | undefined,\r\n\t\tisActive: boolean | undefined,\r\n\t\thidePossible?: boolean\r\n\t) {\r\n\t\tlet text = '';\r\n\t\tconst abilityData = this.getPokemonAbilityData(clientPokemon, serverPokemon);\r\n\t\tif (!isActive) {\r\n\t\t\t// for switch tooltips, only show the original ability\r\n\t\t\tconst ability = abilityData.baseAbility || abilityData.ability;\r\n\t\t\tif (ability) text = '<small>Ability:</small> ' + Dex.abilities.get(ability).name;\r\n\t\t} else {\r\n\t\t\tif (abilityData.ability) {\r\n\t\t\t\tconst abilityName = Dex.abilities.get(abilityData.ability).name;\r\n\t\t\t\ttext = '<small>Ability:</small> ' + abilityName;\r\n\t\t\t\tconst baseAbilityName = Dex.abilities.get(abilityData.baseAbility).name;\r\n\t\t\t\tif (baseAbilityName && baseAbilityName !== abilityName) text += ' (base: ' + baseAbilityName + ')';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!text && abilityData.possibilities.length && !hidePossible) {\r\n\t\t\ttext = '<small>Possible abilities:</small> ' + abilityData.possibilities.join(', ');\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n}\r\n\r\ntype StatsTable = {hp: number, atk: number, def: number, spa: number, spd: number, spe: number};\r\n\r\n/**\r\n * PokemonSet can be sparse, in which case that entry should be\r\n * inferred from the rest of the set, according to sensible\r\n * defaults.\r\n */\r\ninterface PokemonSet {\r\n\t/** Defaults to species name (not including forme), like in games */\r\n\tname?: string;\r\n\tspecies: string;\r\n\t/** Defaults to no item */\r\n\titem?: string;\r\n\t/** Defaults to no ability (error in Gen 3+) */\r\n\tability?: string;\r\n\tmoves: string[];\r\n\t/** Defaults to no nature (error in Gen 3+) */\r\n\tnature?: NatureName;\r\n\t/** Defaults to random legal gender, NOT subject to gender ratios */\r\n\tgender?: string;\r\n\t/** Defaults to flat 252's (200's/0's in Let's Go) (error in gen 3+) */\r\n\tevs?: StatsTable;\r\n\t/** Defaults to whatever makes sense - flat 31's unless you have Gyro Ball etc */\r\n\tivs?: StatsTable;\r\n\t/** Defaults as you'd expect (100 normally, 50 in VGC-likes, 5 in LC) */\r\n\tlevel?: number;\r\n\t/** Defaults to no (error if shiny event) */\r\n\tshiny?: boolean;\r\n\t/** Defaults to 255 unless you have Frustration, in which case 0 */\r\n\thappiness?: number;\r\n\t/** Defaults to event required ball, otherwise Poké Ball */\r\n\tpokeball?: string;\r\n\t/** Defaults to the type of your Hidden Power in Moves, otherwise Dark */\r\n\thpType?: string;\r\n\t/** Defaults to 10 */\r\n\tdynamaxLevel?: number;\r\n\t/** Defaults to no (can only be yes for certain Pokemon) */\r\n\tgigantamax?: boolean;\r\n\t/** Defaults to the primary type */\r\n\tteraType?: string;\r\n}\r\n\r\nclass BattleStatGuesser {\r\n\tformatid: ID;\r\n\tdex: ModdedDex;\r\n\tmoveCount: any = null;\r\n\thasMove: any = null;\r\n\r\n\tignoreEVLimits: boolean;\r\n\tsupportsEVs: boolean;\r\n\tsupportsAVs: boolean;\r\n\r\n\tconstructor(formatid: ID) {\r\n\t\tthis.formatid = formatid;\r\n\t\tthis.dex = formatid ? Dex.mod(formatid.slice(0, 4) as ID) : Dex;\r\n\t\tthis.ignoreEVLimits = (\r\n\t\t\tthis.dex.gen < 3 ||\r\n\t\t\t((this.formatid.endsWith('hackmons') || this.formatid.endsWith('bh')) && this.dex.gen !== 6) ||\r\n\t\t\tthis.formatid.includes('metronomebattle') ||\r\n\t\t\tthis.formatid.endsWith('norestrictions')\r\n\t\t);\r\n\t\tthis.supportsEVs = !this.formatid.includes('letsgo');\r\n\t\tthis.supportsAVs = !this.supportsEVs && this.formatid.endsWith('norestrictions');\r\n\t}\r\n\tguess(set: PokemonSet) {\r\n\t\tlet role = this.guessRole(set);\r\n\t\tlet comboEVs = this.guessEVs(set, role);\r\n\t\tlet evs = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\r\n\t\tfor (let stat in evs) {\r\n\t\t\tevs[stat as StatName] = comboEVs[stat as StatName] || 0;\r\n\t\t}\r\n\t\tlet plusStat = comboEVs.plusStat || '';\r\n\t\tlet minusStat = comboEVs.minusStat || '';\r\n\t\treturn {role, evs, plusStat, minusStat, moveCount: this.moveCount, hasMove: this.hasMove};\r\n\t}\r\n\tguessRole(set: PokemonSet) {\r\n\t\tif (!set) return '?';\r\n\t\tif (!set.moves) return '?';\r\n\r\n\t\tlet moveCount = {\r\n\t\t\t'Physical': 0,\r\n\t\t\t'Special': 0,\r\n\t\t\t'PhysicalAttack': 0,\r\n\t\t\t'SpecialAttack': 0,\r\n\t\t\t'PhysicalSetup': 0,\r\n\t\t\t'SpecialSetup': 0,\r\n\t\t\t'Support': 0,\r\n\t\t\t'Setup': 0,\r\n\t\t\t'Restoration': 0,\r\n\t\t\t'Offense': 0,\r\n\t\t\t'Stall': 0,\r\n\t\t\t'SpecialStall': 0,\r\n\t\t\t'PhysicalStall': 0,\r\n\t\t\t'Fast': 0,\r\n\t\t\t'Ultrafast': 0,\r\n\t\t\t'bulk': 0,\r\n\t\t\t'specialBulk': 0,\r\n\t\t\t'physicalBulk': 0,\r\n\t\t};\r\n\t\tlet hasMove: {[moveid: string]: 1} = {};\r\n\t\tlet itemid = toID(set.item);\r\n\t\tlet item = this.dex.items.get(itemid);\r\n\t\tlet abilityid = toID(set.ability);\r\n\r\n\t\tlet species = this.dex.species.get(set.species || set.name!);\r\n\t\tif (item.megaEvolves === species.name) species = this.dex.species.get(item.megaStone);\r\n\t\tif (!species.exists) return '?';\r\n\t\tlet stats = species.baseStats;\r\n\r\n\t\tif (set.moves.length < 1) return '?';\r\n\t\tlet needsFourMoves = !['unown', 'ditto'].includes(species.id);\r\n\t\tlet moveids = set.moves.map(toID);\r\n\t\tif (moveids.includes('lastresort' as ID)) needsFourMoves = false;\r\n\t\tif (set.moves.length < 4 && needsFourMoves && !this.formatid.includes('metronomebattle')) {\r\n\t\t\treturn '?';\r\n\t\t}\r\n\r\n\t\tfor (let i = 0, len = set.moves.length; i < len; i++) {\r\n\t\t\tlet move = this.dex.moves.get(set.moves[i]);\r\n\t\t\thasMove[move.id] = 1;\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tif (['batonpass', 'healingwish', 'lunardance'].includes(move.id)) {\r\n\t\t\t\t\tmoveCount['Support']++;\r\n\t\t\t\t} else if (['metronome', 'assist', 'copycat', 'mefirst', 'photongeyser', 'shellsidearm'].includes(move.id)) {\r\n\t\t\t\t\tmoveCount['Physical'] += 0.5;\r\n\t\t\t\t\tmoveCount['Special'] += 0.5;\r\n\t\t\t\t} else if (move.id === 'naturepower') {\r\n\t\t\t\t\tmoveCount['Special']++;\r\n\t\t\t\t} else if (['protect', 'detect', 'spikyshield', 'kingsshield'].includes(move.id)) {\r\n\t\t\t\t\tmoveCount['Stall']++;\r\n\t\t\t\t} else if (move.id === 'wish') {\r\n\t\t\t\t\tmoveCount['Restoration']++;\r\n\t\t\t\t\tmoveCount['Stall']++;\r\n\t\t\t\t\tmoveCount['Support']++;\r\n\t\t\t\t} else if (move.heal) {\r\n\t\t\t\t\tmoveCount['Restoration']++;\r\n\t\t\t\t\tmoveCount['Stall']++;\r\n\t\t\t\t} else if (move.target === 'self') {\r\n\t\t\t\t\tif (['agility', 'rockpolish', 'shellsmash', 'growth', 'workup'].includes(move.id)) {\r\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\r\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\r\n\t\t\t\t\t} else if (['dragondance', 'swordsdance', 'coil', 'bulkup', 'curse', 'bellydrum'].includes(move.id)) {\r\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\r\n\t\t\t\t\t} else if (['nastyplot', 'tailglow', 'quiverdance', 'calmmind', 'geomancy'].includes(move.id)) {\r\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (move.id === 'substitute') moveCount['Stall']++;\r\n\t\t\t\t\tmoveCount['Setup']++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (['toxic', 'leechseed', 'willowisp'].includes(move.id)) {\r\n\t\t\t\t\t\tmoveCount['Stall']++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmoveCount['Support']++;\r\n\t\t\t\t}\r\n\t\t\t} else if (['counter', 'endeavor', 'metalburst', 'mirrorcoat', 'rapidspin'].includes(move.id)) {\r\n\t\t\t\tmoveCount['Support']++;\r\n\t\t\t} else if ([\r\n\t\t\t\t'nightshade', 'seismictoss', 'psywave', 'superfang', 'naturesmadness', 'foulplay', 'endeavor', 'finalgambit', 'bodypress',\r\n\t\t\t].includes(move.id)) {\r\n\t\t\t\tmoveCount['Offense']++;\r\n\t\t\t} else if (move.id === 'fellstinger') {\r\n\t\t\t\tmoveCount['PhysicalSetup']++;\r\n\t\t\t\tmoveCount['Setup']++;\r\n\t\t\t} else {\r\n\t\t\t\tmoveCount[move.category]++;\r\n\t\t\t\tmoveCount['Offense']++;\r\n\t\t\t\tif (move.id === 'knockoff') {\r\n\t\t\t\t\tmoveCount['Support']++;\r\n\t\t\t\t}\r\n\t\t\t\tif (['scald', 'voltswitch', 'uturn', 'flipturn'].includes(move.id)) {\r\n\t\t\t\t\tmoveCount[move.category] -= 0.2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasMove['batonpass']) moveCount['Support'] += moveCount['Setup'];\r\n\t\tmoveCount['PhysicalAttack'] = moveCount['Physical'];\r\n\t\tmoveCount['Physical'] += moveCount['PhysicalSetup'];\r\n\t\tmoveCount['SpecialAttack'] = moveCount['Special'];\r\n\t\tmoveCount['Special'] += moveCount['SpecialSetup'];\r\n\r\n\t\tif (hasMove['dragondance'] || hasMove['quiverdance']) moveCount['Ultrafast'] = 1;\r\n\r\n\t\tlet isFast = (stats.spe >= 80);\r\n\t\tlet physicalBulk = (stats.hp + 75) * (stats.def + 87);\r\n\t\tlet specialBulk = (stats.hp + 75) * (stats.spd + 87);\r\n\r\n\t\tif (hasMove['willowisp'] || hasMove['acidarmor'] || hasMove['irondefense'] || hasMove['cottonguard']) {\r\n\t\t\tphysicalBulk *= 1.6;\r\n\t\t\tmoveCount['PhysicalStall']++;\r\n\t\t} else if (hasMove['scald'] || hasMove['bulkup'] || hasMove['coil'] || hasMove['cosmicpower']) {\r\n\t\t\tphysicalBulk *= 1.3;\r\n\t\t\tif (hasMove['scald']) { // partial stall goes in reverse\r\n\t\t\t\tmoveCount['SpecialStall']++;\r\n\t\t\t} else {\r\n\t\t\t\tmoveCount['PhysicalStall']++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (abilityid === 'flamebody') physicalBulk *= 1.1;\r\n\r\n\t\tif (hasMove['calmmind'] || hasMove['quiverdance'] || hasMove['geomancy']) {\r\n\t\t\tspecialBulk *= 1.3;\r\n\t\t\tmoveCount['SpecialStall']++;\r\n\t\t}\r\n\t\tif (abilityid === 'sandstream' && species.types.includes('Rock')) {\r\n\t\t\tspecialBulk *= 1.5;\r\n\t\t}\r\n\r\n\t\tif (hasMove['bellydrum']) {\r\n\t\t\tphysicalBulk *= 0.6;\r\n\t\t\tspecialBulk *= 0.6;\r\n\t\t}\r\n\t\tif (moveCount['Restoration']) {\r\n\t\t\tphysicalBulk *= 1.5;\r\n\t\t\tspecialBulk *= 1.5;\r\n\t\t} else if (hasMove['painsplit'] && hasMove['substitute']) {\r\n\t\t\t// SubSplit isn't generally a stall set\r\n\t\t\tmoveCount['Stall']--;\r\n\t\t} else if (hasMove['painsplit'] || hasMove['rest']) {\r\n\t\t\tphysicalBulk *= 1.4;\r\n\t\t\tspecialBulk *= 1.4;\r\n\t\t}\r\n\t\tif ((hasMove['bodyslam'] || hasMove['thunder']) && abilityid === 'serenegrace' || hasMove['thunderwave']) {\r\n\t\t\tphysicalBulk *= 1.1;\r\n\t\t\tspecialBulk *= 1.1;\r\n\t\t}\r\n\t\tif ((hasMove['ironhead'] || hasMove['airslash']) && abilityid === 'serenegrace') {\r\n\t\t\tphysicalBulk *= 1.1;\r\n\t\t\tspecialBulk *= 1.1;\r\n\t\t}\r\n\t\tif (hasMove['gigadrain'] || hasMove['drainpunch'] || hasMove['hornleech']) {\r\n\t\t\tphysicalBulk *= 1.15;\r\n\t\t\tspecialBulk *= 1.15;\r\n\t\t}\r\n\t\tif (itemid === 'leftovers' || itemid === 'blacksludge') {\r\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\r\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\r\n\t\t}\r\n\t\tif (hasMove['leechseed']) {\r\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\r\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\r\n\t\t}\r\n\t\tif ((itemid === 'flameorb' || itemid === 'toxicorb') && abilityid !== 'magicguard') {\r\n\t\t\tif (itemid === 'toxicorb' && abilityid === 'poisonheal') {\r\n\t\t\t\tphysicalBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\r\n\t\t\t\tspecialBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\r\n\t\t\t} else {\r\n\t\t\t\tphysicalBulk *= 0.8;\r\n\t\t\t\tspecialBulk *= 0.8;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (itemid === 'lifeorb') {\r\n\t\t\tphysicalBulk *= 0.7;\r\n\t\t\tspecialBulk *= 0.7;\r\n\t\t}\r\n\t\tif (abilityid === 'multiscale' || abilityid === 'magicguard' || abilityid === 'regenerator') {\r\n\t\t\tphysicalBulk *= 1.4;\r\n\t\t\tspecialBulk *= 1.4;\r\n\t\t}\r\n\t\tif (itemid === 'eviolite') {\r\n\t\t\tphysicalBulk *= 1.5;\r\n\t\t\tspecialBulk *= 1.5;\r\n\t\t}\r\n\t\tif (itemid === 'assaultvest') {\r\n\t\t\tspecialBulk *= 1.5;\r\n\t\t}\r\n\r\n\t\tlet bulk = physicalBulk + specialBulk;\r\n\t\tif (bulk < 46000 && stats.spe >= 70) isFast = true;\r\n\t\tif (hasMove['trickroom']) isFast = false;\r\n\t\tmoveCount['bulk'] = bulk;\r\n\t\tmoveCount['physicalBulk'] = physicalBulk;\r\n\t\tmoveCount['specialBulk'] = specialBulk;\r\n\r\n\t\tif (\r\n\t\t\thasMove['agility'] || hasMove['dragondance'] || hasMove['quiverdance'] ||\r\n\t\t\thasMove['rockpolish'] || hasMove['shellsmash'] || hasMove['flamecharge']\r\n\t\t) {\r\n\t\t\tisFast = true;\r\n\t\t} else if (abilityid === 'unburden' || abilityid === 'speedboost' || abilityid === 'motordrive') {\r\n\t\t\tisFast = true;\r\n\t\t\tmoveCount['Ultrafast'] = 1;\r\n\t\t} else if (abilityid === 'chlorophyll' || abilityid === 'swiftswim' || abilityid === 'sandrush') {\r\n\t\t\tisFast = true;\r\n\t\t\tmoveCount['Ultrafast'] = 2;\r\n\t\t} else if (itemid === 'salacberry') {\r\n\t\t\tisFast = true;\r\n\t\t}\r\n\t\tconst ultrafast = hasMove['agility'] || hasMove['shellsmash'] ||\r\n\t\t\thasMove['autotomize'] || hasMove['shiftgear'] || hasMove['rockpolish'];\r\n\t\tif (ultrafast) {\r\n\t\t\tmoveCount['Ultrafast'] = 2;\r\n\t\t}\r\n\t\tmoveCount['Fast'] = isFast ? 1 : 0;\r\n\r\n\t\tthis.moveCount = moveCount;\r\n\t\tthis.hasMove = hasMove;\r\n\r\n\t\tif (species.id === 'ditto') return abilityid === 'imposter' ? 'Physically Defensive' : 'Fast Bulky Support';\r\n\t\tif (species.id === 'shedinja') return 'Fast Physical Sweeper';\r\n\r\n\t\tif (itemid === 'choiceband' && moveCount['PhysicalAttack'] >= 2) {\r\n\t\t\tif (!isFast) return 'Bulky Band';\r\n\t\t\treturn 'Fast Band';\r\n\t\t} else if (itemid === 'choicespecs' && moveCount['SpecialAttack'] >= 2) {\r\n\t\t\tif (!isFast) return 'Bulky Specs';\r\n\t\t\treturn 'Fast Specs';\r\n\t\t} else if (itemid === 'choicescarf') {\r\n\t\t\tif (moveCount['PhysicalAttack'] === 0) return 'Special Scarf';\r\n\t\t\tif (moveCount['SpecialAttack'] === 0) return 'Physical Scarf';\r\n\t\t\tif (moveCount['PhysicalAttack'] > moveCount['SpecialAttack']) return 'Physical Biased Mixed Scarf';\r\n\t\t\tif (moveCount['PhysicalAttack'] < moveCount['SpecialAttack']) return 'Special Biased Mixed Scarf';\r\n\t\t\tif (stats.atk < stats.spa) return 'Special Biased Mixed Scarf';\r\n\t\t\treturn 'Physical Biased Mixed Scarf';\r\n\t\t}\r\n\r\n\t\tif (species.id === 'unown') return 'Fast Special Sweeper';\r\n\r\n\t\tif (moveCount['PhysicalStall'] && moveCount['Restoration']) {\r\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\r\n\t\t\treturn 'Specially Defensive';\r\n\t\t}\r\n\t\tif (moveCount['SpecialStall'] && moveCount['Restoration'] && itemid !== 'lifeorb') {\r\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\r\n\t\t\treturn 'Physically Defensive';\r\n\t\t}\r\n\r\n\t\tlet offenseBias: 'Physical' | 'Special' = 'Physical';\r\n\t\tif (stats.spa > stats.atk && moveCount['Special'] > 1) offenseBias = 'Special';\r\n\t\telse if (stats.atk > stats.spa && moveCount['Physical'] > 1) offenseBias = 'Physical';\r\n\t\telse if (moveCount['Special'] > moveCount['Physical']) offenseBias = 'Special';\r\n\r\n\t\tif (moveCount['Stall'] + moveCount['Support'] / 2 <= 2 && bulk < 135000 && moveCount[offenseBias] >= 1.5) {\r\n\t\t\tif (isFast) {\r\n\t\t\t\tif (bulk > 80000 && !moveCount['Ultrafast']) return 'Bulky ' + offenseBias + ' Sweeper';\r\n\t\t\t\treturn 'Fast ' + offenseBias + ' Sweeper';\r\n\t\t\t} else {\r\n\t\t\t\tif (moveCount[offenseBias] >= 3 || moveCount['Stall'] <= 0) {\r\n\t\t\t\t\treturn 'Bulky ' + offenseBias + ' Sweeper';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isFast && abilityid !== 'prankster') {\r\n\t\t\tif (stats.spe > 100 || bulk < 55000 || moveCount['Ultrafast']) {\r\n\t\t\t\treturn 'Fast Bulky Support';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (moveCount['SpecialStall']) return 'Physically Defensive';\r\n\t\tif (moveCount['PhysicalStall']) return 'Specially Defensive';\r\n\t\tif (species.id === 'blissey' || species.id === 'chansey') return 'Physically Defensive';\r\n\t\tif (specialBulk >= physicalBulk) return 'Specially Defensive';\r\n\t\treturn 'Physically Defensive';\r\n\t}\r\n\tensureMinEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\r\n\t\tif (!evs[stat]) evs[stat] = 0;\r\n\t\tlet diff = min - evs[stat];\r\n\t\tif (diff <= 0) return evTotal;\r\n\t\tif (evTotal <= 504) {\r\n\t\t\tlet change = Math.min(508 - evTotal, diff);\r\n\t\t\tevTotal += change;\r\n\t\t\tevs[stat] += change;\r\n\t\t\tdiff -= change;\r\n\t\t}\r\n\t\tif (diff <= 0) return evTotal;\r\n\t\tlet evPriority = {def: 1, spd: 1, hp: 1, atk: 1, spa: 1, spe: 1};\r\n\t\tlet prioStat: StatName;\r\n\t\tfor (prioStat in evPriority) {\r\n\t\t\tif (prioStat === stat) continue;\r\n\t\t\tif (evs[prioStat] && evs[prioStat] > 128) {\r\n\t\t\t\tevs[prioStat] -= diff;\r\n\t\t\t\tevs[stat] += diff;\r\n\t\t\t\treturn evTotal;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn evTotal; // can't do it :(\r\n\t}\r\n\tensureMaxEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\r\n\t\tif (!evs[stat]) evs[stat] = 0;\r\n\t\tlet diff = evs[stat] - min;\r\n\t\tif (diff <= 0) return evTotal;\r\n\t\tevs[stat] -= diff;\r\n\t\tevTotal -= diff;\r\n\t\treturn evTotal; // can't do it :(\r\n\t}\r\n\tguessEVs(set: PokemonSet, role: string): Partial<StatsTable> & {plusStat?: StatName | '', minusStat?: StatName | ''} {\r\n\t\tif (!set) return {};\r\n\t\tif (role === '?') return {};\r\n\t\tlet species = this.dex.species.get(set.species || set.name!);\r\n\t\tlet stats = species.baseStats;\r\n\r\n\t\tlet hasMove = this.hasMove;\r\n\t\tlet moveCount = this.moveCount;\r\n\r\n\t\tlet evs: StatsTable & {plusStat?: StatName | '', minusStat?: StatName | ''} = {\r\n\t\t\thp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0,\r\n\t\t};\r\n\t\tlet plusStat: StatName | '' = '';\r\n\t\tlet minusStat: StatName | '' = '';\r\n\r\n\t\tlet statChart: {[role: string]: [StatName, StatName]} = {\r\n\t\t\t'Bulky Band': ['atk', 'hp'],\r\n\t\t\t'Fast Band': ['spe', 'atk'],\r\n\t\t\t'Bulky Specs': ['spa', 'hp'],\r\n\t\t\t'Fast Specs': ['spe', 'spa'],\r\n\t\t\t'Physical Scarf': ['spe', 'atk'],\r\n\t\t\t'Special Scarf': ['spe', 'spa'],\r\n\t\t\t'Physical Biased Mixed Scarf': ['spe', 'atk'],\r\n\t\t\t'Special Biased Mixed Scarf': ['spe', 'spa'],\r\n\t\t\t'Fast Physical Sweeper': ['spe', 'atk'],\r\n\t\t\t'Fast Special Sweeper': ['spe', 'spa'],\r\n\t\t\t'Bulky Physical Sweeper': ['atk', 'hp'],\r\n\t\t\t'Bulky Special Sweeper': ['spa', 'hp'],\r\n\t\t\t'Fast Bulky Support': ['spe', 'hp'],\r\n\t\t\t'Physically Defensive': ['def', 'hp'],\r\n\t\t\t'Specially Defensive': ['spd', 'hp'],\r\n\t\t};\r\n\r\n\t\tplusStat = statChart[role][0];\r\n\t\tif (role === 'Fast Bulky Support') moveCount['Ultrafast'] = 0;\r\n\t\tif (plusStat === 'spe' && moveCount['Ultrafast']) {\r\n\t\t\tif (statChart[role][1] === 'atk' || statChart[role][1] === 'spa') {\r\n\t\t\t\tplusStat = statChart[role][1];\r\n\t\t\t} else if (moveCount['Physical'] >= 3) {\r\n\t\t\t\tplusStat = 'atk';\r\n\t\t\t} else if (stats.spd > stats.def) {\r\n\t\t\t\tplusStat = 'spd';\r\n\t\t\t} else {\r\n\t\t\t\tplusStat = 'def';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.supportsAVs) {\r\n\t\t\t// Let's Go, AVs enabled\r\n\t\t\tevs = {hp: 200, atk: 200, def: 200, spa: 200, spd: 200, spe: 200};\r\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\r\n\t\t\tif (!moveCount['SpecialAttack']) evs.spa = 0;\r\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\r\n\t\t} else if (!this.supportsEVs) {\r\n\t\t\t// Let's Go, AVs disabled\r\n\t\t\t// no change\r\n\t\t} else if (this.ignoreEVLimits) {\r\n\t\t\t// Gen 1-2, hackable EVs (like Hackmons)\r\n\t\t\tevs = {hp: 252, atk: 252, def: 252, spa: 252, spd: 252, spe: 252};\r\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\r\n\t\t\tif (!moveCount['SpecialAttack'] && this.dex.gen > 1) evs.spa = 0;\r\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\r\n\t\t\tif (this.dex.gen === 1) evs.spd = 0;\r\n\t\t\tif (this.dex.gen < 3) return evs;\r\n\t\t} else {\r\n\t\t\t// Normal Gen 3-7\r\n\t\t\tif (!statChart[role]) return {};\r\n\r\n\t\t\tlet evTotal = 0;\r\n\r\n\t\t\tlet primaryStat = statChart[role][0];\r\n\t\t\tlet stat = this.getStat(primaryStat, set, 252, plusStat === primaryStat ? 1.1 : 1.0);\r\n\t\t\tlet ev = 252;\r\n\t\t\twhile (ev > 0 && stat <= this.getStat(primaryStat, set, ev - 4, plusStat === primaryStat ? 1.1 : 1.0)) ev -= 4;\r\n\t\t\tevs[primaryStat] = ev;\r\n\t\t\tevTotal += ev;\r\n\r\n\t\t\tlet secondaryStat: StatName | null = statChart[role][1];\r\n\t\t\tif (secondaryStat === 'hp' && set.level && set.level < 20) secondaryStat = 'spd';\r\n\t\t\tstat = this.getStat(secondaryStat, set, 252, plusStat === secondaryStat ? 1.1 : 1.0);\r\n\t\t\tev = 252;\r\n\t\t\twhile (ev > 0 && stat <= this.getStat(secondaryStat, set, ev - 4, plusStat === secondaryStat ? 1.1 : 1.0)) ev -= 4;\r\n\t\t\tevs[secondaryStat] = ev;\r\n\t\t\tevTotal += ev;\r\n\r\n\t\t\tlet SRweaknesses = ['Fire', 'Flying', 'Bug', 'Ice'];\r\n\t\t\tlet SRresistances = ['Ground', 'Steel', 'Fighting'];\r\n\t\t\tlet SRweak = 0;\r\n\t\t\tif (set.ability !== 'Magic Guard' && set.ability !== 'Mountaineer') {\r\n\t\t\t\tif (SRweaknesses.indexOf(species.types[0]) >= 0) {\r\n\t\t\t\t\tSRweak++;\r\n\t\t\t\t} else if (SRresistances.indexOf(species.types[0]) >= 0) {\r\n\t\t\t\t\tSRweak--;\r\n\t\t\t\t}\r\n\t\t\t\tif (SRweaknesses.indexOf(species.types[1]) >= 0) {\r\n\t\t\t\t\tSRweak++;\r\n\t\t\t\t} else if (SRresistances.indexOf(species.types[1]) >= 0) {\r\n\t\t\t\t\tSRweak--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet hpDivisibility = 0;\r\n\t\t\tlet hpShouldBeDivisible = false;\r\n\t\t\tlet hp = evs['hp'] || 0;\r\n\t\t\tstat = this.getStat('hp', set, hp, 1);\r\n\t\t\tif ((set.item === 'Leftovers' || set.item === 'Black Sludge') && hasMove['substitute'] && stat !== 404) {\r\n\t\t\t\thpDivisibility = 4;\r\n\t\t\t} else if (set.item === 'Leftovers' || set.item === 'Black Sludge') {\r\n\t\t\t\thpDivisibility = 0;\r\n\t\t\t} else if (hasMove['bellydrum'] && (set.item || '').slice(-5) === 'Berry') {\r\n\t\t\t\thpDivisibility = 2;\r\n\t\t\t\thpShouldBeDivisible = true;\r\n\t\t\t} else if (hasMove['substitute'] && (set.item || '').slice(-5) === 'Berry') {\r\n\t\t\t\thpDivisibility = 4;\r\n\t\t\t\thpShouldBeDivisible = true;\r\n\t\t\t} else if (SRweak >= 2 || hasMove['bellydrum']) {\r\n\t\t\t\thpDivisibility = 2;\r\n\t\t\t} else if (SRweak >= 1 || hasMove['substitute'] || hasMove['transform']) {\r\n\t\t\t\thpDivisibility = 4;\r\n\t\t\t} else if (set.ability !== 'Magic Guard') {\r\n\t\t\t\thpDivisibility = 8;\r\n\t\t\t}\r\n\r\n\t\t\tif (hpDivisibility) {\r\n\t\t\t\twhile (hp < 252 && evTotal < 508 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\r\n\t\t\t\t\thp += 4;\r\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\r\n\t\t\t\t\tevTotal += 4;\r\n\t\t\t\t}\r\n\t\t\t\twhile (hp > 0 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\r\n\t\t\t\t\thp -= 4;\r\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\r\n\t\t\t\t\tevTotal -= 4;\r\n\t\t\t\t}\r\n\t\t\t\twhile (hp > 0 && stat === this.getStat('hp', set, hp - 4, 1)) {\r\n\t\t\t\t\thp -= 4;\r\n\t\t\t\t\tevTotal -= 4;\r\n\t\t\t\t}\r\n\t\t\t\tif (hp || evs['hp']) evs['hp'] = hp;\r\n\t\t\t}\r\n\r\n\t\t\tif (species.id === 'tentacruel') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 16, evTotal);\r\n\t\t\t} else if (species.id === 'skarmory') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 24, evTotal);\r\n\t\t\t} else if (species.id === 'jirachi') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 32, evTotal);\r\n\t\t\t} else if (species.id === 'celebi') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 36, evTotal);\r\n\t\t\t} else if (species.id === 'volcarona') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 52, evTotal);\r\n\t\t\t} else if (species.id === 'gliscor') {\r\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 72, evTotal);\r\n\t\t\t} else if (species.id === 'dragonite' && evs['hp']) {\r\n\t\t\t\tevTotal = this.ensureMaxEVs(evs, 'spe', 220, evTotal);\r\n\t\t\t}\r\n\r\n\t\t\tif (evTotal < 508) {\r\n\t\t\t\tlet remaining = 508 - evTotal;\r\n\t\t\t\tif (remaining > 252) remaining = 252;\r\n\t\t\t\tsecondaryStat = null;\r\n\t\t\t\tif (!evs['atk'] && moveCount['PhysicalAttack'] >= 1) {\r\n\t\t\t\t\tsecondaryStat = 'atk';\r\n\t\t\t\t} else if (!evs['spa'] && moveCount['SpecialAttack'] >= 1) {\r\n\t\t\t\t\tsecondaryStat = 'spa';\r\n\t\t\t\t} else if (stats.hp === 1 && !evs['def']) {\r\n\t\t\t\t\tsecondaryStat = 'def';\r\n\t\t\t\t} else if (stats.def === stats.spd && !evs['spd']) {\r\n\t\t\t\t\tsecondaryStat = 'spd';\r\n\t\t\t\t} else if (!evs['spd']) {\r\n\t\t\t\t\tsecondaryStat = 'spd';\r\n\t\t\t\t} else if (!evs['def']) {\r\n\t\t\t\t\tsecondaryStat = 'def';\r\n\t\t\t\t}\r\n\t\t\t\tif (secondaryStat) {\r\n\t\t\t\t\tev = remaining;\r\n\t\t\t\t\tstat = this.getStat(secondaryStat, set, ev);\r\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat(secondaryStat, set, ev - 4)) ev -= 4;\r\n\t\t\t\t\tif (ev) evs[secondaryStat] = ev;\r\n\t\t\t\t\tremaining -= ev;\r\n\t\t\t\t}\r\n\t\t\t\tif (remaining && !evs['spe']) {\r\n\t\t\t\t\tev = remaining;\r\n\t\t\t\t\tstat = this.getStat('spe', set, ev);\r\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat('spe', set, ev - 4)) ev -= 4;\r\n\t\t\t\t\tif (ev) evs['spe'] = ev;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (hasMove['gyroball'] || hasMove['trickroom']) {\r\n\t\t\tminusStat = 'spe';\r\n\t\t} else if (!moveCount['PhysicalAttack']) {\r\n\t\t\tminusStat = 'atk';\r\n\t\t} else if (moveCount['SpecialAttack'] < 1 && !evs['spa']) {\r\n\t\t\tif (moveCount['SpecialAttack'] < moveCount['PhysicalAttack']) {\r\n\t\t\t\tminusStat = 'spa';\r\n\t\t\t} else if (!evs['atk']) {\r\n\t\t\t\tminusStat = 'atk';\r\n\t\t\t}\r\n\t\t} else if (moveCount['PhysicalAttack'] < 1 && !evs['atk']) {\r\n\t\t\tminusStat = 'atk';\r\n\t\t} else if (stats.def > stats.spe && stats.spd > stats.spe && !evs['spe']) {\r\n\t\t\tminusStat = 'spe';\r\n\t\t} else if (stats.def > stats.spd) {\r\n\t\t\tminusStat = 'spd';\r\n\t\t} else {\r\n\t\t\tminusStat = 'def';\r\n\t\t}\r\n\r\n\t\tif (plusStat === minusStat) {\r\n\t\t\tminusStat = (plusStat === 'spe' ? 'spd' : 'spe');\r\n\t\t}\r\n\r\n\t\tevs.plusStat = plusStat;\r\n\t\tevs.minusStat = minusStat;\r\n\r\n\t\treturn evs;\r\n\t}\r\n\r\n\tgetStat(stat: StatName, set: PokemonSet, evOverride?: number, natureOverride?: number) {\r\n\t\tlet species = this.dex.species.get(set.species);\r\n\t\tif (!species.exists) return 0;\r\n\r\n\t\tlet level = set.level || 100;\r\n\r\n\t\tlet baseStat = species.baseStats[stat];\r\n\r\n\t\tlet iv = (set.ivs && set.ivs[stat]);\r\n\t\tif (typeof iv !== 'number') iv = 31;\r\n\t\tif (this.dex.gen <= 2) iv &= 30;\r\n\r\n\t\tlet ev = (set.evs && set.evs[stat]);\r\n\t\tif (typeof ev !== 'number') ev = (this.dex.gen > 2 ? 0 : 252);\r\n\t\tif (evOverride !== undefined) ev = evOverride;\r\n\r\n\t\tif (stat === 'hp') {\r\n\t\t\tif (baseStat === 1) return 1;\r\n\t\t\tif (!this.supportsEVs) return ~~(~~(2 * baseStat + iv + 100) * level / 100 + 10) + (this.supportsAVs ? ev : 0);\r\n\t\t\treturn ~~(~~(2 * baseStat + iv + ~~(ev / 4) + 100) * level / 100 + 10);\r\n\t\t}\r\n\t\tlet val = ~~(~~(2 * baseStat + iv + ~~(ev / 4)) * level / 100 + 5);\r\n\t\tif (!this.supportsEVs) {\r\n\t\t\tval = ~~(~~(2 * baseStat + iv) * level / 100 + 5);\r\n\t\t}\r\n\t\tif (natureOverride) {\r\n\t\t\tval *= natureOverride;\r\n\t\t} else if (BattleNatures[set.nature!]?.plus === stat) {\r\n\t\t\tval *= 1.1;\r\n\t\t} else if (BattleNatures[set.nature!]?.minus === stat) {\r\n\t\t\tval *= 0.9;\r\n\t\t}\r\n\t\tif (!this.supportsEVs) {\r\n\t\t\tlet friendshipValue = ~~((70 / 255 / 10 + 1) * 100);\r\n\t\t\tval = ~~(val) * friendshipValue / 100 + (this.supportsAVs ? ev : 0);\r\n\t\t}\r\n\t\treturn ~~(val);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).BattleStatGuesser = BattleStatGuesser;\r\n}\r\n"],"mappings":"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"}