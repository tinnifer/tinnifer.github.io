{"version":3,"file":"client-main.js","names":["PSPrefsDefaults","PSPrefs","_PSStreamModel","_inheritsLoose","_this","call","theme","nogif","showjoins","onepanel","mute","effectvolume","musicvolume","notifvolume","storageEngine","storage","origin","Config","routes","client","key","_assertThisInitialized","value","includes","window","localStorage","load","JSON","parse","getItem","_unused","_proto","prototype","set","update","save","newPrefs","noSave","fixPrefs","Object","assign","setItem","stringify","oldShowjoins","undefined","serverShowjoins","global","showroomjoins","roomid","server","id","isChrome64","navigator","userAgent","alert","colorSchemeQuerySupported","matchMedia","media","PSStreamModel","BattleFormats","PSTeams","_PSStreamModel2","_this2","usesLocalLadder","list","byKey","deletedTeams","unpackAll","_unused2","_proto2","teambuilderFormat","format","ruleSepIndex","indexOf","slice","formatid","toID","formatEntry","getKey","name","baseKey","i","buffer","charAt","trim","unpackOldBuffer","_i2","_buffer$split2","split","length","line","team","unpackLine","push","unshift","_delete","teamIndex","splice","undelete","_ref","pop","packAll","teams","map","folder","packedTeam","join","_unused3","pipeIndex","bracketIndex","slashIndex","lastIndexOf","iconCache","PSUser","_PSModel","_this3","_len","arguments","args","Array","_key2","apply","concat","group","userid","named","registered","avatar","_proto3","setName","fullName","loggingIn","_BattleTextParser$par","BattleTextParser","parseNameParts","PS","rooms","room","connectWhenLoggedIn","connect","logOut","_PS$connection","PSLoginServer","query","act","send","connection","disconnect","PSModel","PSServer","defaultserver","host","port","altport","prefix","protocol","httpport","groups","type","order","defaultGroup","_proto4","getGroup","symbol","PSRoom","_PSStreamModel3","options","_this4","title","classType","location","closable","connected","canConnect","onParentEvent","width","height","parentElem","rightPopup","notifications","isSubtleNotifying","_proto5","notify","noAutoDismiss","Error","body","dismissNotification","filter","notification","autoDismissNotifications","setDimensions","receiveLine","toHighlight","handleMessage","startsWith","spaceIndex","cmd","user","msg","direct","destroy","PlaceholderRoom","_PSRoom","_this5","_len2","_key3","queue","_proto6","_PSModel2","_class2","_document$querySelect","_this6","down","prefs","isOffline","router","roomTypes","leftRoomList","rightRoomList","miniRoomList","popups","leftRoom","rightRoom","activePanel","onePanelMode","leftRoomWidth","mainmenu","dragging","arrowKeysUsed","newsHTML","document","querySelector","innerHTML","addRoom","updateLayout","addEventListener","_proto7","getWidthFor","minWidth","maxWidth","isMainMenu","alreadyUpdating","calculateLeftRoomWidth","roomHeight","offsetHeight","totalWidth","offsetWidth","layoutAlreadyUpdated","receive","endsWith","nlIndex","roomid2","console","log","isInit","_i4","_msg$split2","parseLine","updateRoomTypes","removeRoom","fullMsg","isVisible","left","right","available","excess","leftStretch","rightStretch","Math","floor","createRoom","hyphenIndex","roomType","Model","updated","newRoom","_i6","_options$queue2","focusRoom","leave","focusLeftRoom","allRooms","roomIndex","focusRightRoom","focusPreview","buf","getPMRoom","myUserid","sort","noFocus","challengeMenuOpen","userid1","userid2","popup","popupid","openChallenge","parentRoomid","_i8","_options$queue4","leftRoomIndex","rightRoomIndex","newRightRoomid","miniRoomIndex","closePopup","skipUpdate","side"],"sources":["../src/client-main.ts"],"sourcesContent":["/**\r\n * Client main\r\n *\r\n * Dependencies: client-core\r\n *\r\n * Sets up the main client models: Prefs, Teams, User, and PS.\r\n *\r\n * @author Guangcong Luo <guancongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\n/**********************************************************************\r\n * Prefs\r\n *********************************************************************/\r\n\r\n/**\r\n * String that contains only lowercase alphanumeric characters.\r\n */\r\ntype RoomID = string & {__isRoomID: true};\r\n\r\nconst PSPrefsDefaults: {[key: string]: any} = {};\r\n\r\n/**\r\n * Tracks user preferences, stored in localStorage. Contains most local\r\n * data, with the exception of backgrounds, teams, and session data,\r\n * which get their own models.\r\n *\r\n * Updates will name the key updated, so you don't need to overreact.\r\n */\r\nclass PSPrefs extends PSStreamModel<string | null> {\r\n\t/**\r\n\t * The theme to use. \"system\" matches the theme of the system accessing the client.\r\n\t */\r\n\ttheme: 'light' | 'dark' | 'system' = 'light';\r\n\t/**\r\n\t * Disables animated GIFs, but keeps other animations enabled.\r\n\t * Workaround for a Chrome 64 bug with GIFs.\r\n\t * true - Disable GIFs, will be automatically re-enabled if you\r\n\t *   switch away from Chrome 64.\r\n\t * false - Enable GIFs all the time.\r\n\t * null - Enable GIFs only on Chrome 64.\r\n\t */\r\n\tnogif: boolean | null = null;\r\n\t/**\r\n\t * Show \"User joined\" and \"User left\" messages. serverid:roomid\r\n\t * table. Uses 1 and 0 instead of true/false for JSON packing\r\n\t * reasons.\r\n\t */\r\n\tshowjoins: {[serverid: string]: {[roomid: string]: 1 | 0}} | null = null;\r\n\t/**\r\n\t * true = one panel, false = two panels, left and right\r\n\t */\r\n\tonepanel = false;\r\n\r\n\tmute = false;\r\n\teffectvolume = 50;\r\n\tmusicvolume = 50;\r\n\tnotifvolume = 50;\r\n\r\n\tstorageEngine: 'localStorage' | 'iframeLocalStorage' | '' = '';\r\n\tstorage: {[k: string]: any} = {};\r\n\treadonly origin = `https://${Config.routes.client}`;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tfor (const key in this) {\r\n\t\t\tconst value = (this as any)[key];\r\n\t\t\tif (['storage', 'subscriptions', 'origin', 'storageEngine'].includes(key)) continue;\r\n\t\t\tif (typeof value === 'function') continue;\r\n\t\t\tPSPrefsDefaults[key] = value;\r\n\t\t}\r\n\r\n\t\t// set up local loading\r\n\t\ttry {\r\n\t\t\tif (window.localStorage) {\r\n\t\t\t\tthis.storageEngine = 'localStorage';\r\n\t\t\t\tthis.load(JSON.parse(localStorage.getItem('showdown_prefs')!) || {}, true);\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t}\r\n\t/**\r\n\t * Change a preference.\r\n\t */\r\n\tset<T extends keyof PSPrefs>(key: T, value: PSPrefs[T]) {\r\n\t\tif (value === null) {\r\n\t\t\tdelete this.storage[key];\r\n\t\t\t(this as any)[key] = PSPrefsDefaults[key];\r\n\t\t} else {\r\n\t\t\tthis.storage[key] = value;\r\n\t\t\t(this as any)[key] = value;\r\n\t\t}\r\n\t\tthis.update(key);\r\n\t\tthis.save();\r\n\t}\r\n\tload(newPrefs: object, noSave?: boolean) {\r\n\t\tthis.fixPrefs(newPrefs);\r\n\t\tObject.assign(this, PSPrefsDefaults);\r\n\t\tthis.storage = newPrefs;\r\n\t\tthis.update(null);\r\n\t\tif (!noSave) this.save();\r\n\t}\r\n\tsave() {\r\n\t\tswitch (this.storageEngine) {\r\n\t\tcase 'localStorage':\r\n\t\t\tlocalStorage.setItem('showdown_prefs', JSON.stringify(this.storage));\r\n\t\t}\r\n\t}\r\n\tfixPrefs(newPrefs: any) {\r\n\t\tconst oldShowjoins = newPrefs['showjoins'];\r\n\t\tif (oldShowjoins !== undefined && typeof oldShowjoins !== 'object') {\r\n\t\t\tconst showjoins: {[serverid: string]: {[roomid: string]: 1 | 0}} = {};\r\n\t\t\tconst serverShowjoins: {[roomid: string]: 1 | 0} = {global: (oldShowjoins ? 1 : 0)};\r\n\t\t\tconst showroomjoins = newPrefs['showroomjoins'] as {[roomid: string]: boolean};\r\n\t\t\tfor (const roomid in showroomjoins) {\r\n\t\t\t\tserverShowjoins[roomid] = (showroomjoins[roomid] ? 1 : 0);\r\n\t\t\t}\r\n\t\t\tdelete newPrefs['showroomjoins'];\r\n\t\t\tshowjoins[Config.server.id] = serverShowjoins;\r\n\t\t\tnewPrefs['showjoins'] = showjoins;\r\n\t\t}\r\n\r\n\t\tconst isChrome64 = navigator.userAgent.includes(' Chrome/64.');\r\n\t\tif (newPrefs['nogif'] !== undefined) {\r\n\t\t\tif (!isChrome64) {\r\n\t\t\t\tdelete newPrefs['nogif'];\r\n\t\t\t}\r\n\t\t} else if (isChrome64) {\r\n\t\t\tnewPrefs['nogif'] = true;\r\n\t\t\talert('Your version of Chrome has a bug that makes animated GIFs freeze games sometimes, so certain animations have been disabled. Only some people have the problem, so you can experiment and enable them in the Options menu setting \"Disable GIFs for Chrome 64 bug\".');\r\n\t\t}\r\n\r\n\t\tconst colorSchemeQuerySupported = window.matchMedia?.('(prefers-color-scheme: dark)').media !== 'not all';\r\n\t\tif (newPrefs['theme'] === 'system' && !colorSchemeQuerySupported) {\r\n\t\t\tnewPrefs['theme'] = 'light';\r\n\t\t}\r\n\t\tif (newPrefs['dark'] !== undefined) {\r\n\t\t\tif (newPrefs['dark']) {\r\n\t\t\t\tnewPrefs['theme'] = 'dark';\r\n\t\t\t}\r\n\t\t\tdelete newPrefs['dark'];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Teams\r\n *********************************************************************/\r\n\r\ninterface Team {\r\n\tname: string;\r\n\tformat: ID;\r\n\tpackedTeam: string;\r\n\tfolder: string;\r\n\t/** The icon cache must be cleared (to `null`) whenever `packedTeam` is modified */\r\n\ticonCache: preact.ComponentChildren;\r\n\tkey: string;\r\n}\r\nif (!window.BattleFormats) window.BattleFormats = {};\r\n\r\n/**\r\n * This model tracks teams and formats, updating when either is updated.\r\n */\r\nclass PSTeams extends PSStreamModel<'team' | 'format'> {\r\n\t/** false if it uses the ladder in the website */\r\n\tusesLocalLadder = false;\r\n\tlist: Team[] = [];\r\n\tbyKey: {[key: string]: Team | undefined} = {};\r\n\tdeletedTeams: [Team, number][] = [];\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\ttry {\r\n\t\t\tthis.unpackAll(localStorage.getItem('showdown_teams'));\r\n\t\t} catch {}\r\n\t}\r\n\tteambuilderFormat(format: string): ID {\r\n\t\tconst ruleSepIndex = format.indexOf('@@@');\r\n\t\tif (ruleSepIndex >= 0) format = format.slice(0, ruleSepIndex);\r\n\t\tconst formatid = toID(format);\r\n\t\tif (!window.BattleFormats) return formatid;\r\n\t\tconst formatEntry = BattleFormats[formatid];\r\n\t\treturn formatEntry?.teambuilderFormat || formatid;\r\n\t}\r\n\tgetKey(name: string) {\r\n\t\tconst baseKey: string = toID(name) || '0';\r\n\t\tlet key = baseKey;\r\n\t\tlet i = 1;\r\n\t\twhile (key in this.byKey) {\r\n\t\t\ti++;\r\n\t\t\tkey = `${baseKey}-${i}`;\r\n\t\t}\r\n\t\treturn key;\r\n\t}\r\n\tunpackAll(buffer: string | null) {\r\n\t\tif (!buffer) {\r\n\t\t\tthis.list = [];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (buffer.charAt(0) === '[' && !buffer.trim().includes('\\n')) {\r\n\t\t\tthis.unpackOldBuffer(buffer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.list = [];\r\n\t\tfor (const line of buffer.split('\\n')) {\r\n\t\t\tconst team = this.unpackLine(line);\r\n\t\t\tif (team) this.push(team);\r\n\t\t}\r\n\t\tthis.update('team');\r\n\t}\r\n\tpush(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.push(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunshift(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.unshift(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tdelete(team: Team) {\r\n\t\tconst teamIndex = this.list.indexOf(team);\r\n\t\tif (teamIndex < 0) return false;\r\n\t\tthis.deletedTeams.push([team, teamIndex]);\r\n\t\tthis.list.splice(teamIndex, 1);\r\n\t\tdelete this.byKey[team.key];\r\n\t}\r\n\tundelete() {\r\n\t\tif (!this.deletedTeams.length) return;\r\n\t\tconst [team, teamIndex] = this.deletedTeams.pop()!;\r\n\t\tthis.list.splice(teamIndex, 0, team);\r\n\t\tif (this.byKey[team.key]) team.key = this.getKey(team.name);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunpackOldBuffer(buffer: string) {\r\n\t\talert(`Your team storage format is too old for PS. You'll need to upgrade it at https://${Config.routes.client}/recoverteams.html`);\r\n\t\tthis.list = [];\r\n\t\treturn;\r\n\t}\r\n\tpackAll(teams: Team[]) {\r\n\t\treturn teams.map(team => (\r\n\t\t\t(team.format ? `${team.format}]` : ``) + (team.folder ? `${team.folder}/` : ``) + team.name + `|` + team.packedTeam\r\n\t\t)).join('\\n');\r\n\t}\r\n\tsave() {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem('showdown_teams', this.packAll(this.list));\r\n\t\t} catch {}\r\n\t\tthis.update('team');\r\n\t}\r\n\tunpackLine(line: string): Team | null {\r\n\t\tlet pipeIndex = line.indexOf('|');\r\n\t\tif (pipeIndex < 0) return null;\r\n\t\tlet bracketIndex = line.indexOf(']');\r\n\t\tif (bracketIndex > pipeIndex) bracketIndex = -1;\r\n\t\tlet slashIndex = line.lastIndexOf('/', pipeIndex);\r\n\t\tif (slashIndex < 0) slashIndex = bracketIndex; // line.slice(slashIndex + 1, pipeIndex) will be ''\r\n\t\tlet format = bracketIndex > 0 ? line.slice(0, bracketIndex) : 'gen7';\r\n\t\tif (format.slice(0, 3) !== 'gen') format = 'gen6' + format;\r\n\t\tconst name = line.slice(slashIndex + 1, pipeIndex);\r\n\t\treturn {\r\n\t\t\tname,\r\n\t\t\tformat: format as ID,\r\n\t\t\tfolder: line.slice(bracketIndex + 1, slashIndex > 0 ? slashIndex : bracketIndex + 1),\r\n\t\t\tpackedTeam: line.slice(pipeIndex + 1),\r\n\t\t\ticonCache: null,\r\n\t\t\tkey: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * User\r\n *********************************************************************/\r\n\r\nclass PSUser extends PSModel {\r\n\tname = \"\";\r\n\tgroup = '';\r\n\tuserid = \"\" as ID;\r\n\tnamed = false;\r\n\tregistered = false;\r\n\tavatar = \"1\";\r\n\tsetName(fullName: string, named: boolean, avatar: string) {\r\n\t\tconst loggingIn = (!this.named && named);\r\n\t\tconst {name, group} = BattleTextParser.parseNameParts(fullName);\r\n\t\tthis.name = name;\r\n\t\tthis.group = group;\r\n\t\tthis.userid = toID(name);\r\n\t\tthis.named = named;\r\n\t\tthis.avatar = avatar;\r\n\t\tthis.update();\r\n\t\tif (loggingIn) {\r\n\t\t\tfor (const roomid in PS.rooms) {\r\n\t\t\t\tconst room = PS.rooms[roomid]!;\r\n\t\t\t\tif (room.connectWhenLoggedIn) room.connect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlogOut() {\r\n\t\tPSLoginServer.query({\r\n\t\t\tact: 'logout',\r\n\t\t\tuserid: this.userid,\r\n\t\t});\r\n\t\tPS.send('|/logout');\r\n\t\tPS.connection?.disconnect();\r\n\r\n\t\talert(\"You have been logged out and disconnected.\\n\\nIf you wanted to change your name while staying connected, use the 'Change Name' button or the '/nick' command.\");\r\n\t\tthis.name = \"\";\r\n\t\tthis.group = '';\r\n\t\tthis.userid = \"\" as ID;\r\n\t\tthis.named = false;\r\n\t\tthis.registered = false;\r\n\t\tthis.update();\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Server\r\n *********************************************************************/\r\n\r\ninterface PSGroup {\r\n\tname?: string;\r\n\ttype?: 'leadership' | 'staff' | 'punishment';\r\n\torder: number;\r\n}\r\n\r\nclass PSServer {\r\n\tid = Config.defaultserver.id;\r\n\thost = Config.defaultserver.host;\r\n\tport = Config.defaultserver.port;\r\n\taltport = Config.defaultserver.altport;\r\n\tregistered = Config.defaultserver.registered;\r\n\tprefix = '/showdown';\r\n\tprotocol: 'http' | 'https' = Config.defaultserver.httpport ? 'https' : 'http';\r\n\tgroups: {[symbol: string]: PSGroup} = {\r\n\t\t'~': {\r\n\t\t\tname: \"Administrator (~)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 101,\r\n\t\t},\r\n\t\t'#': {\r\n\t\t\tname: \"Room Owner (#)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 102,\r\n\t\t},\r\n\t\t'&': {\r\n\t\t\tname: \"Administrator (&)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 103,\r\n\t\t},\r\n\t\t'\\u2605': {\r\n\t\t\tname: \"Host (\\u2605)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 104,\r\n\t\t},\r\n\t\t'@': {\r\n\t\t\tname: \"Moderator (@)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 105,\r\n\t\t},\r\n\t\t'%': {\r\n\t\t\tname: \"Driver (%)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 106,\r\n\t\t},\r\n\t\t'\\u00a7': {\r\n\t\t\tname: \"Section Leader (\\u00a7)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 107,\r\n\t\t},\r\n\t\t// by default, unrecognized ranks go here, between section leader and bot\r\n\t\t'*': {\r\n\t\t\tname: \"Bot (*)\",\r\n\t\t\torder: 109,\r\n\t\t},\r\n\t\t'\\u2606': {\r\n\t\t\tname: \"Player (\\u2606)\",\r\n\t\t\torder: 110,\r\n\t\t},\r\n\t\t'+': {\r\n\t\t\tname: \"Voice (+)\",\r\n\t\t\torder: 200,\r\n\t\t},\r\n\t\t' ': {\r\n\t\t\torder: 201,\r\n\t\t},\r\n\t\t'!': {\r\n\t\t\tname: \"Muted (!)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 301,\r\n\t\t},\r\n\t\t'✖': {\r\n\t\t\tname: \"Namelocked (\\u2716)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 302,\r\n\t\t},\r\n\t\t'\\u203d': {\r\n\t\t\tname: \"Locked (\\u203d)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 303,\r\n\t\t},\r\n\t};\r\n\tdefaultGroup: PSGroup = {\r\n\t\torder: 108,\r\n\t};\r\n\tgetGroup(symbol: string | undefined) {\r\n\t\treturn this.groups[(symbol || ' ').charAt(0)] || this.defaultGroup;\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Rooms\r\n *********************************************************************/\r\n\r\ntype PSRoomLocation = 'left' | 'right' | 'popup' | 'mini-window' | 'modal-popup' | 'semimodal-popup';\r\n\r\ninterface RoomOptions {\r\n\tid: RoomID;\r\n\ttitle?: string;\r\n\ttype?: string;\r\n\tlocation?: PSRoomLocation | null;\r\n\t/** Handled after initialization, outside of the constructor */\r\n\tqueue?: Args[];\r\n\tparentElem?: HTMLElement | null;\r\n\tparentRoomid?: RoomID | null;\r\n\trightPopup?: boolean;\r\n\tconnected?: boolean;\r\n\t[k: string]: unknown;\r\n}\r\n\r\ninterface PSNotificationState {\r\n\ttitle: string;\r\n\tbody?: string;\r\n\t/** Used to identify notifications to be dismissed - '' if you only want to autodismiss */\r\n\tid: string;\r\n\t/** normally: automatically dismiss the notification when viewing the room; set this to require manual dismissing */\r\n\tnoAutoDismiss: boolean;\r\n}\r\n\r\n/**\r\n * As a PSStreamModel, PSRoom can emit `Args` to mean \"we received a message\",\r\n * and `null` to mean \"tell Preact to re-render this room\"\r\n */\r\nclass PSRoom extends PSStreamModel<Args | null> implements RoomOptions {\r\n\tid: RoomID;\r\n\ttitle = \"\";\r\n\ttype = '';\r\n\treadonly classType: string = '';\r\n\tlocation: PSRoomLocation = 'left';\r\n\tclosable = true;\r\n\t/**\r\n\t * Whether the room is connected to the server. This mostly tracks\r\n\t * \"should we send /leave if the user closes the room?\"\r\n\t *\r\n\t * In particular, this is `true` after sending `/join`, and `false`\r\n\t * after sending `/leave`, even before the server responds.\r\n\t */\r\n\tconnected: boolean = false;\r\n\t/**\r\n\t * Can this room even be connected to at all?\r\n\t * `true` = pass messages from the server to subscribers\r\n\t * `false` = throw an error if we receive messages from the server\r\n\t */\r\n\treadonly canConnect: boolean = false;\r\n\tconnectWhenLoggedIn: boolean = false;\r\n\tonParentEvent: ((eventId: 'focus' | 'keydown', e?: Event) => false | void) | null = null;\r\n\r\n\twidth = 0;\r\n\theight = 0;\r\n\tparentElem: HTMLElement | null = null;\r\n\trightPopup = false;\r\n\r\n\tnotifications: PSNotificationState[] = [];\r\n\tisSubtleNotifying = false;\r\n\r\n\t// for compatibility with RoomOptions\r\n\t[k: string]: unknown;\r\n\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper();\r\n\t\tthis.id = options.id;\r\n\t\tif (options.title) this.title = options.title;\r\n\t\tif (!this.title) this.title = this.id;\r\n\t\tif (options.type) this.type = options.type;\r\n\t\tif (options.location) this.location = options.location;\r\n\t\tif (options.parentElem) this.parentElem = options.parentElem;\r\n\t\tif (this.location !== 'popup' && this.location !== 'semimodal-popup') this.parentElem = null;\r\n\t\tif (options.rightPopup) this.rightPopup = true;\r\n\t\tif (options.connected) this.connected = true;\r\n\t}\r\n\tnotify(options: {title: string, body?: string, noAutoDismiss?: boolean, id?: string}) {\r\n\t\tif (options.noAutoDismiss && !options.id) {\r\n\t\t\tthrow new Error(`Must specify id for manual dismissing`);\r\n\t\t}\r\n\t\tthis.notifications.push({\r\n\t\t\ttitle: options.title,\r\n\t\t\tbody: options.body,\r\n\t\t\tid: options.id || '',\r\n\t\t\tnoAutoDismiss: options.noAutoDismiss || false,\r\n\t\t});\r\n\t\tPS.update();\r\n\t}\r\n\tdismissNotification(id: string) {\r\n\t\tthis.notifications = this.notifications.filter(notification => notification.id !== id);\r\n\t\tPS.update();\r\n\t}\r\n\tautoDismissNotifications() {\r\n\t\tthis.notifications = this.notifications.filter(notification => notification.noAutoDismiss);\r\n\t\tthis.isSubtleNotifying = false;\r\n\t}\r\n\tsetDimensions(width: number, height: number) {\r\n\t\tif (this.width === width && this.height === height) return;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.update(null);\r\n\t}\r\n\tconnect(): void {\r\n\t\tthrow new Error(`This room is not designed to connect to a server room`);\r\n\t}\r\n\treceiveLine(args: Args): void {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'title': {\r\n\t\t\tthis.title = args[1];\r\n\t\t\tPS.update();\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotify': {\r\n\t\t\tconst [, id, title, body, toHighlight] = args;\r\n\t\t\tthis.notify({title, body, id});\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotifyoff': {\r\n\t\t\tconst [, id] = args;\r\n\t\t\tthis.dismissNotification(id);\r\n\t\t\tbreak;\r\n\t\t} default: {\r\n\t\t\tif (this.canConnect) {\r\n\t\t\t\tthis.update(args);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`This room is not designed to receive messages`);\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\thandleMessage(line: string) {\r\n\t\tif (!line.startsWith('/') || line.startsWith('//')) return false;\r\n\t\tconst spaceIndex = line.indexOf(' ');\r\n\t\tconst cmd = spaceIndex >= 0 ? line.slice(1, spaceIndex) : line.slice(1);\r\n\t\t// const target = spaceIndex >= 0 ? line.slice(spaceIndex + 1) : '';\r\n\t\tswitch (cmd) {\r\n\t\tcase 'logout': {\r\n\t\t\tPS.user.logOut();\r\n\t\t\treturn true;\r\n\t\t}}\r\n\t\treturn false;\r\n\t}\r\n\tsend(msg: string, direct?: boolean) {\r\n\t\tif (!direct && !msg) return;\r\n\t\tif (!direct && this.handleMessage(msg)) return;\r\n\r\n\t\tPS.send(this.id + '|' + msg);\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.connected) {\r\n\t\t\tthis.send('/noreply /leave', true);\r\n\t\t\tthis.connected = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass PlaceholderRoom extends PSRoom {\r\n\tqueue = [] as Args[];\r\n\treadonly classType: 'placeholder' = 'placeholder';\r\n\treceiveLine(args: Args) {\r\n\t\tthis.queue.push(args);\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * PS\r\n *********************************************************************/\r\n\r\ntype RoomType = {Model?: typeof PSRoom, Component: any, title?: string};\r\n\r\n/**\r\n * This model updates:\r\n * - when a room is joined or left\r\n * - changing which room is focused\r\n * - changing the width of the left room, in two-panel mode\r\n */\r\nconst PS = new class extends PSModel {\r\n\tdown: string | boolean = false;\r\n\r\n\tprefs = new PSPrefs();\r\n\tteams = new PSTeams();\r\n\tuser = new PSUser();\r\n\tserver = new PSServer();\r\n\tconnection: PSConnection | null = null;\r\n\tconnected = false;\r\n\t/**\r\n\t * While PS is technically disconnected while it's trying to connect,\r\n\t * it still shows UI like it's connected, so you can click buttons\r\n\t * before the server connection is established.\r\n\t *\r\n\t * `isOffline` is only set if PS is neither connected nor trying to\r\n\t * connect.\r\n\t */\r\n\tisOffline = false;\r\n\r\n\trouter: PSRouter = null!;\r\n\r\n\trooms: {[roomid: string]: PSRoom | undefined} = {};\r\n\troomTypes: {\r\n\t\t[type: string]: RoomType | undefined,\r\n\t} = {};\r\n\t/** List of rooms on the left side of the top tabbar */\r\n\tleftRoomList: RoomID[] = [];\r\n\t/** List of rooms on the right side of the top tabbar */\r\n\trightRoomList: RoomID[] = [];\r\n\t/** List of mini-rooms in the Main Menu */\r\n\tminiRoomList: RoomID[] = [];\r\n\t/** Currently active popups, in stack order (bottom to top) */\r\n\tpopups: RoomID[] = [];\r\n\r\n\t/**\r\n\t * Currently active left room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible left panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.room`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\tleftRoom: PSRoom = null!;\r\n\t/**\r\n\t * Currently active right room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible right panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.room`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\trightRoom: PSRoom | null = null;\r\n\t/**\r\n\t * The currently focused room. Should always be the topmost popup\r\n\t * if it exists. If no popups are open, it should be\r\n\t * `PS.activePanel`.\r\n\t *\r\n\t * Determines which room receives keyboard shortcuts.\r\n\t *\r\n\t * Clicking inside a panel will focus it, in two-panel mode.\r\n\t */\r\n\troom: PSRoom = null!;\r\n\t/**\r\n\t * The currently active panel. Should always be either `PS.leftRoom`\r\n\t * or `PS.rightRoom`. If no popups are open, should be `PS.room`.\r\n\t *\r\n\t * In one-panel mode, determines whether the left or right panel is\r\n\t * visible.\r\n\t */\r\n\tactivePanel: PSRoom = null!;\r\n\t/**\r\n\t * Not to be confused with PSPrefs.onepanel, which is permanent.\r\n\t * PS.onePanelMode will be true if one-panel mode is on, but it will\r\n\t * also be true if the right panel is temporarily hidden (by opening\r\n\t * the Rooms panel and clicking \"Hide\")\r\n\t *\r\n\t * Will NOT be true if only one panel fits onto the screen at the\r\n\t * moment, but resizing will display multiple panels – for that,\r\n\t * check `PS.leftRoomWidth === 0`\r\n\t */\r\n\tonePanelMode = false;\r\n\t/**\r\n\t * 0 = only one panel visible.\r\n\t * n.b. PS will only update if the left room width changes. Resizes\r\n\t * that don't change the left room width will not trigger an update.\r\n\t */\r\n\tleftRoomWidth = 0;\r\n\tmainmenu: MainMenuRoom = null!;\r\n\r\n\t/**\r\n\t * The drag-and-drop API is incredibly dumb and doesn't let us know\r\n\t * what's being dragged until the `drop` event, so we track it here.\r\n\t *\r\n\t * Note that `PS.dragging` will be null if the drag was initiated\r\n\t * outside PS (e.g. dragging a team from File Explorer to PS), and\r\n\t * for security reasons it's impossible to know what they are until\r\n\t * they're dropped.\r\n\t */\r\n\tdragging: {type: 'room', roomid: RoomID} | null = null;\r\n\r\n\t/** Tracks whether or not to display the \"Use arrow keys\" hint */\r\n\tarrowKeysUsed = false;\r\n\r\n\tnewsHTML = document.querySelector('.news-embed .pm-log')?.innerHTML || '';\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addRoom({\r\n\t\t\tid: '' as RoomID,\r\n\t\t\ttitle: \"Home\",\r\n\t\t});\r\n\r\n\t\tthis.addRoom({\r\n\t\t\tid: 'rooms' as RoomID,\r\n\t\t\ttitle: \"Rooms\",\r\n\t\t});\r\n\r\n\t\tif (this.newsHTML) {\r\n\t\t\tthis.addRoom({\r\n\t\t\t\tid: 'news' as RoomID,\r\n\t\t\t\ttitle: \"News\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.updateLayout();\r\n\t\twindow.addEventListener('resize', () => this.updateLayout());\r\n\t}\r\n\r\n\t// Panel layout\r\n\t///////////////\r\n\t/**\r\n\t * \"minWidth\" and \"maxWidth\" are a bit deceptive here - to be clear,\r\n\t * all PS rooms are expected to responsively support any width from\r\n\t * 320px up, when in single panel mode. These metrics are used purely\r\n\t * to calculate the location of the separator in two-panel mode.\r\n\t *\r\n\t * - `minWidth` - minimum width as a right-panel\r\n\t * - `width` - preferred width, minimum width as a left-panel\r\n\t * - `maxWidth` - maximum width as a left-panel\r\n\t *\r\n\t * PS will only show two panels if it can fit `width` in the left, and\r\n\t * `minWidth` in the right. Extra space will be given to to right panel\r\n\t * until it reaches `width`, then evenly distributed until both panels\r\n\t * reach `maxWidth`, and extra space above that will be given to the\r\n\t * right panel.\r\n\t */\r\n\tgetWidthFor(room: PSRoom) {\r\n\t\tswitch (room.type) {\r\n\t\tcase 'mainmenu':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 340,\r\n\t\t\t\twidth: 628,\r\n\t\t\t\tmaxWidth: 628,\r\n\t\t\t\tisMainMenu: true,\r\n\t\t\t};\r\n\t\tcase 'chat':\r\n\t\tcase 'rooms':\r\n\t\tcase 'battles':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 570,\r\n\t\t\t\tmaxWidth: 640,\r\n\t\t\t};\r\n\t\tcase 'battle':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 956,\r\n\t\t\t\tmaxWidth: 1180,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tminWidth: 640,\r\n\t\t\twidth: 640,\r\n\t\t\tmaxWidth: 640,\r\n\t\t};\r\n\t}\r\n\tupdateLayout(alreadyUpdating?: boolean) {\r\n\t\tconst leftRoomWidth = this.calculateLeftRoomWidth();\r\n\t\tlet roomHeight = document.body.offsetHeight - 56;\r\n\t\tlet totalWidth = document.body.offsetWidth;\r\n\t\tif (leftRoomWidth) {\r\n\t\t\tthis.leftRoom.width = leftRoomWidth;\r\n\t\t\tthis.leftRoom.height = roomHeight;\r\n\t\t\tthis.rightRoom!.width = totalWidth + 1 - leftRoomWidth;\r\n\t\t\tthis.rightRoom!.height = roomHeight;\r\n\t\t} else {\r\n\t\t\tthis.activePanel.width = totalWidth;\r\n\t\t\tthis.activePanel.height = roomHeight;\r\n\t\t}\r\n\r\n\t\tif (this.leftRoomWidth !== leftRoomWidth) {\r\n\t\t\tthis.leftRoomWidth = leftRoomWidth;\r\n\t\t\tif (!alreadyUpdating) this.update(true);\r\n\t\t}\r\n\t}\r\n\tupdate(layoutAlreadyUpdated?: boolean) {\r\n\t\tif (!layoutAlreadyUpdated) this.updateLayout(true);\r\n\t\tsuper.update();\r\n\t}\r\n\treceive(msg: string) {\r\n\t\tmsg = msg.endsWith('\\n') ? msg.slice(0, -1) : msg;\r\n\t\tlet roomid = '' as RoomID;\r\n\t\tif (msg.startsWith('>')) {\r\n\t\t\tconst nlIndex = msg.indexOf('\\n');\r\n\t\t\troomid = msg.slice(1, nlIndex) as RoomID;\r\n\t\t\tmsg = msg.slice(nlIndex + 1);\r\n\t\t}\r\n\t\tconst roomid2 = roomid || 'lobby' as RoomID;\r\n\t\tlet room = PS.rooms[roomid];\r\n\t\tconsole.log('\\u2705 ' + (roomid ? '[' + roomid + '] ' : '') + '%c' + msg, \"color: #007700\");\r\n\t\tlet isInit = false;\r\n\t\tfor (const line of msg.split('\\n')) {\r\n\t\t\tconst args = BattleTextParser.parseLine(line);\r\n\t\t\tswitch (args[0]) {\r\n\t\t\tcase 'init': {\r\n\t\t\t\tisInit = true;\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tconst [, type] = args;\r\n\t\t\t\tif (!room) {\r\n\t\t\t\t\tthis.addRoom({\r\n\t\t\t\t\t\tid: roomid2,\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tconnected: true,\r\n\t\t\t\t\t}, roomid === 'staff' || roomid === 'upperstaff');\r\n\t\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\troom.type = type;\r\n\t\t\t\t\troom.connected = true;\r\n\t\t\t\t\tthis.updateRoomTypes();\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'deinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tthis.removeRoom(room);\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'noinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tif (args[1] === 'namerequired') {\r\n\t\t\t\t\t\troom.connectWhenLoggedIn = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t}}\r\n\t\t\tif (room) room.receiveLine(args);\r\n\t\t}\r\n\t\tif (room) room.update(isInit ? [`initdone`] : null);\r\n\t}\r\n\tsend(fullMsg: string) {\r\n\t\tconst pipeIndex = fullMsg.indexOf('|');\r\n\t\tconst roomid = fullMsg.slice(0, pipeIndex) as RoomID;\r\n\t\tconst msg = fullMsg.slice(pipeIndex + 1);\r\n\t\tconsole.log('\\u25b6\\ufe0f ' + (roomid ? '[' + roomid + '] ' : '') + '%c' + msg, \"color: #776677\");\r\n\t\tif (!this.connection) {\r\n\t\t\talert(`You are not connected and cannot send ${msg}.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.connection.send(fullMsg);\r\n\t}\r\n\tisVisible(room: PSRoom) {\r\n\t\tif (this.leftRoomWidth === 0) {\r\n\t\t\t// one panel visible\r\n\t\t\treturn room === this.room;\r\n\t\t} else {\r\n\t\t\t// both panels visible\r\n\t\t\treturn room === this.rightRoom || room === this.leftRoom;\r\n\t\t}\r\n\t}\r\n\tcalculateLeftRoomWidth() {\r\n\t\t// If we don't have both a left room and a right room, obviously\r\n\t\t// just show one room\r\n\t\tif (!this.leftRoom || !this.rightRoom || this.onePanelMode) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// The rest of this code can assume we have both a left room and a\r\n\t\t// right room, and also want to show both if they fit\r\n\r\n\t\tconst left = this.getWidthFor(this.leftRoom);\r\n\t\tconst right = this.getWidthFor(this.rightRoom);\r\n\t\tconst available = document.body.offsetWidth;\r\n\r\n\t\tlet excess = available - (left.width + right.width);\r\n\t\tif (excess >= 0) {\r\n\t\t\t// both fit in full size\r\n\t\t\tconst leftStretch = left.maxWidth - left.width;\r\n\t\t\tif (!leftStretch) return left.width;\r\n\t\t\tconst rightStretch = right.maxWidth - right.width;\r\n\t\t\tif (leftStretch + rightStretch >= excess) return left.maxWidth;\r\n\t\t\t// evenly distribute the excess\r\n\t\t\treturn left.width + Math.floor(excess * leftStretch / (leftStretch + rightStretch));\r\n\t\t}\r\n\r\n\t\tif (left.isMainMenu) {\r\n\t\t\tif (available >= left.minWidth + right.width) {\r\n\t\t\t\treturn left.minWidth;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (available >= left.width + right.minWidth) {\r\n\t\t\treturn left.width;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tcreateRoom(options: RoomOptions) {\r\n\t\t// type/side not defined in roomTypes because they need to be guessed before the types are loaded\r\n\t\tif (!options.type) {\r\n\t\t\tconst hyphenIndex = options.id.indexOf('-');\r\n\t\t\tswitch (hyphenIndex < 0 ? options.id : options.id.slice(0, hyphenIndex + 1)) {\r\n\t\t\tcase 'teambuilder': case 'ladder': case 'battles': case 'rooms':\r\n\t\t\tcase 'options': case 'volume': case 'teamdropdown': case 'formatdropdown':\r\n\t\t\tcase 'news':\r\n\t\t\t\toptions.type = options.id;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'battle-': case 'user-': case 'team-': case 'ladder-':\r\n\t\t\t\toptions.type = options.id.slice(0, hyphenIndex);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'view-':\r\n\t\t\t\toptions.type = 'html';\r\n\t\t\t\tbreak;\r\n\t\t\tcase '':\r\n\t\t\t\toptions.type = 'mainmenu';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toptions.type = 'chat';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!options.location) {\r\n\t\t\tswitch (options.type) {\r\n\t\t\tcase 'rooms':\r\n\t\t\tcase 'chat':\r\n\t\t\t\toptions.location = 'right';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'options':\r\n\t\t\tcase 'volume':\r\n\t\t\tcase 'user':\r\n\t\t\t\toptions.location = 'popup';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'teamdropdown':\r\n\t\t\tcase 'formatdropdown':\r\n\t\t\t\toptions.location = 'semimodal-popup';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'news':\r\n\t\t\t\toptions.location = 'mini-window';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (options.id.startsWith('pm-')) options.location = 'mini-window';\r\n\t\t}\r\n\r\n\t\tconst roomType = this.roomTypes[options.type];\r\n\t\tif (roomType?.title) options.title = roomType.title;\r\n\t\tconst Model = roomType ? (roomType.Model || PSRoom) : PlaceholderRoom;\r\n\t\treturn new Model(options);\r\n\t}\r\n\tupdateRoomTypes() {\r\n\t\tlet updated = false;\r\n\t\tfor (const roomid in this.rooms) {\r\n\t\t\tconst room = this.rooms[roomid]!;\r\n\t\t\tif (room.type === room.classType) continue;\r\n\t\t\tconst roomType = this.roomTypes[room.type];\r\n\t\t\tif (!roomType) continue;\r\n\r\n\t\t\tconst options: RoomOptions = room;\r\n\t\t\tif (roomType.title) options.title = roomType.title;\r\n\t\t\tconst Model = roomType.Model || PSRoom;\r\n\t\t\tconst newRoom = new Model(options);\r\n\t\t\tthis.rooms[roomid] = newRoom;\r\n\t\t\tif (this.leftRoom === room) this.leftRoom = newRoom;\r\n\t\t\tif (this.rightRoom === room) this.rightRoom = newRoom;\r\n\t\t\tif (this.activePanel === room) this.activePanel = newRoom;\r\n\t\t\tif (this.room === room) this.room = newRoom;\r\n\t\t\tif (roomid === '') this.mainmenu = newRoom as MainMenuRoom;\r\n\r\n\t\t\tif (options.queue) {\r\n\t\t\t\tfor (const args of options.queue) {\r\n\t\t\t\t\troom.receiveLine(args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif (updated) this.update();\r\n\t}\r\n\tfocusRoom(roomid: RoomID) {\r\n\t\tif (this.room.id === roomid) return;\r\n\t\tif (this.leftRoomList.includes(roomid)) {\r\n\t\t\tthis.leftRoom = this.rooms[roomid]!;\r\n\t\t\tthis.activePanel = this.leftRoom;\r\n\t\t\twhile (this.popups.length) this.leave(this.popups.pop()!);\r\n\t\t\tthis.room = this.leftRoom;\r\n\t\t} else if (this.rightRoomList.includes(roomid)) {\r\n\t\t\tthis.rightRoom = this.rooms[roomid]!;\r\n\t\t\tthis.activePanel = this.rightRoom;\r\n\t\t\twhile (this.popups.length) this.leave(this.popups.pop()!);\r\n\t\t\tthis.room = this.rightRoom;\r\n\t\t} else if (this.rooms[roomid]) { // popup\r\n\t\t\tthis.room = this.rooms[roomid]!;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.room.autoDismissNotifications();\r\n\t\tthis.update();\r\n\t\tif (this.room.onParentEvent) this.room.onParentEvent('focus', undefined);\r\n\t\treturn true;\r\n\t}\r\n\tfocusLeftRoom() {\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn this.focusRoom('' as RoomID);\r\n\t\t}\r\n\t\tif (roomIndex === 0) {\r\n\t\t\treturn this.focusRoom(allRooms[allRooms.length - 1]);\r\n\t\t}\r\n\t\treturn this.focusRoom(allRooms[roomIndex - 1]);\r\n\t}\r\n\tfocusRightRoom() {\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn this.focusRoom('' as RoomID);\r\n\t\t}\r\n\t\tif (roomIndex === allRooms.length - 1) {\r\n\t\t\treturn this.focusRoom(allRooms[0]);\r\n\t\t}\r\n\t\treturn this.focusRoom(allRooms[roomIndex + 1]);\r\n\t}\r\n\tfocusPreview(room: PSRoom) {\r\n\t\tif (room !== this.room) return '';\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tlet buf = '  ';\r\n\t\tif (roomIndex > 1) { // don't show Home\r\n\t\t\tconst leftRoom = this.rooms[allRooms[roomIndex - 1]]!;\r\n\t\t\tbuf += `\\u2190 ${leftRoom.title}`;\r\n\t\t}\r\n\t\tbuf += (this.arrowKeysUsed ? \" | \" : \" (use arrow keys) \");\r\n\t\tif (roomIndex < allRooms.length - 1) {\r\n\t\t\tconst rightRoom = this.rooms[allRooms[roomIndex + 1]]!;\r\n\t\t\tbuf += `${rightRoom.title} \\u2192`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\tgetPMRoom(userid: ID) {\r\n\t\tconst myUserid = PS.user.userid;\r\n\t\tconst roomid = `pm-${[userid, myUserid].sort().join('-')}` as RoomID;\r\n\t\tif (this.rooms[roomid]) return this.rooms[roomid] as ChatRoom;\r\n\t\tthis.join(roomid);\r\n\t\treturn this.rooms[roomid] as ChatRoom;\r\n\t}\r\n\taddRoom(options: RoomOptions, noFocus?: boolean) {\r\n\t\t// support hardcoded PM room-IDs\r\n\t\tif (options.id.startsWith('challenge-')) {\r\n\t\t\toptions.id = `pm-${options.id.slice(10)}` as RoomID;\r\n\t\t\toptions.challengeMenuOpen = true;\r\n\t\t}\r\n\t\tif (options.id.startsWith('pm-') && options.id.indexOf('-', 3) < 0) {\r\n\t\t\tconst userid1 = PS.user.userid;\r\n\t\t\tconst userid2 = options.id.slice(3);\r\n\t\t\toptions.id = `pm-${[userid1, userid2].sort().join('-')}` as RoomID;\r\n\t\t}\r\n\r\n\t\tif (this.rooms[options.id]) {\r\n\t\t\tfor (let i = 0; i < this.popups.length; i++) {\r\n\t\t\t\tconst popup = this.rooms[this.popups[i]]!;\r\n\t\t\t\tif (popup.parentElem === options.parentElem) {\r\n\t\t\t\t\twhile (this.popups.length > i) {\r\n\t\t\t\t\t\tconst popupid = this.popups.pop()!;\r\n\t\t\t\t\t\tthis.leave(popupid);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!noFocus) {\r\n\t\t\t\tif (options.challengeMenuOpen) {\r\n\t\t\t\t\t(this.rooms[options.id] as ChatRoom).openChallenge();\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusRoom(options.id);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!noFocus) {\r\n\t\t\twhile (this.popups.length && this.popups[this.popups.length - 1] !== options.parentRoomid) {\r\n\t\t\t\tconst popupid = this.popups.pop()!;\r\n\t\t\t\tthis.leave(popupid);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst room = this.createRoom(options);\r\n\t\tthis.rooms[room.id] = room;\r\n\t\tswitch (room.location) {\r\n\t\tcase 'left':\r\n\t\t\tthis.leftRoomList.push(room.id);\r\n\t\t\tif (!noFocus) this.leftRoom = room;\r\n\t\t\tbreak;\r\n\t\tcase 'right':\r\n\t\t\tthis.rightRoomList.push(room.id);\r\n\t\t\tif (this.rightRoomList[this.rightRoomList.length - 2] === 'rooms') {\r\n\t\t\t\tthis.rightRoomList.splice(-2, 1);\r\n\t\t\t\tthis.rightRoomList.push('rooms' as RoomID);\r\n\t\t\t}\r\n\t\t\tif (!noFocus || !this.rightRoom) this.rightRoom = room;\r\n\t\t\tbreak;\r\n\t\tcase 'mini-window':\r\n\t\t\tthis.miniRoomList.push(room.id);\r\n\t\t\tbreak;\r\n\t\tcase 'popup':\r\n\t\tcase 'semimodal-popup':\r\n\t\tcase 'modal-popup':\r\n\t\t\tthis.popups.push(room.id);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (!noFocus) {\r\n\t\t\tif (!this.popups.length) this.activePanel = room;\r\n\t\t\tthis.room = room;\r\n\t\t}\r\n\t\tif (options.queue) {\r\n\t\t\tfor (const args of options.queue) {\r\n\t\t\t\troom.receiveLine(args);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn room;\r\n\t}\r\n\tremoveRoom(room: PSRoom) {\r\n\t\troom.destroy();\r\n\t\tdelete PS.rooms[room.id];\r\n\r\n\t\tconst leftRoomIndex = PS.leftRoomList.indexOf(room.id);\r\n\t\tif (leftRoomIndex >= 0) {\r\n\t\t\tPS.leftRoomList.splice(leftRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.leftRoom === room) {\r\n\t\t\tPS.leftRoom = this.mainmenu;\r\n\t\t\tif (PS.activePanel === room) PS.activePanel = this.mainmenu;\r\n\t\t\tif (PS.room === room) PS.room = this.mainmenu;\r\n\t\t}\r\n\r\n\t\tconst rightRoomIndex = PS.rightRoomList.indexOf(room.id);\r\n\t\tif (rightRoomIndex >= 0) {\r\n\t\t\tPS.rightRoomList.splice(rightRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.rightRoom === room) {\r\n\t\t\tlet newRightRoomid = PS.rightRoomList[rightRoomIndex] || PS.rightRoomList[rightRoomIndex - 1];\r\n\t\t\tPS.rightRoom = newRightRoomid ? PS.rooms[newRightRoomid]! : null;\r\n\t\t\tif (PS.activePanel === room) PS.activePanel = PS.rightRoom || PS.leftRoom;\r\n\t\t\tif (PS.room === room) PS.room = PS.activePanel;\r\n\t\t}\r\n\r\n\t\tif (room.location === 'mini-window') {\r\n\t\t\tconst miniRoomIndex = PS.miniRoomList.indexOf(room.id);\r\n\t\t\tif (miniRoomIndex >= 0) {\r\n\t\t\t\tPS.miniRoomList.splice(miniRoomIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.popups.length && room.id === this.popups[this.popups.length - 1]) {\r\n\t\t\tthis.popups.pop();\r\n\t\t\tPS.room = this.popups.length ? PS.rooms[this.popups[this.popups.length - 1]]! : PS.activePanel;\r\n\t\t}\r\n\r\n\t\tthis.update();\r\n\t}\r\n\tclosePopup(skipUpdate?: boolean) {\r\n\t\tif (!this.popups.length) return;\r\n\t\tthis.leave(this.popups[this.popups.length - 1]);\r\n\t\tif (!skipUpdate) this.update();\r\n\t}\r\n\tjoin(roomid: RoomID, side?: PSRoomLocation | null, noFocus?: boolean) {\r\n\t\tif (this.room.id === roomid) return;\r\n\t\tthis.addRoom({id: roomid, side}, noFocus);\r\n\t\tthis.update();\r\n\t}\r\n\tleave(roomid: RoomID) {\r\n\t\tconst room = PS.rooms[roomid];\r\n\t\tif (room) this.removeRoom(room);\r\n\t}\r\n};\r\n"],"mappings":"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"}